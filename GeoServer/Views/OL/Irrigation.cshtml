@{
    ViewData["Title"] = "Карта";
    Layout = "~/Views/Shared/_LayoutIrrigation.cshtml";
}

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@

<script src="~/lib/jquery/dist/jquery.js"></script>
<link href="~/lib/jquery-ui/jquery-ui.css" rel="stylesheet" />
<script src="~/lib/jquery-ui/jquery-ui.js"></script>

<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>
@*jBox*@
<link href="~/lib/vendor/jBox/dist/jBox.all.css" rel="stylesheet" />
<script src="~/lib/vendor/jBox/dist/jBox.all.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" />
<script src="~/lib/chart.js/Chart.js"></script>

<div class="container-fluid p-0">
    <!-- Wrapper -->
    <div class="wrapper">
        <!-- Sidebar -->
        <nav class="sidebar">
            <!-- close sidebar menu -->
            <div class="dismiss">
                <i class="fa fa-arrow-left"></i>
            </div>
            <div class="logo">
                <h3><a href="#">Меню</a></h3>
            </div>
            <div class="card-body p-2">
                <form>
                    <label class="m-0" for="SourceProduct">Спутник</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="SourceProduct">
                            <option value="0">Sentinel-2</option>
                            <option value="1">Landsat</option>
                        </select>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <a href="#" id="LegendBtn" class="target-click">
                                    <i class="SomeInfo fa fa-tag" InfoTitle="Условные обозначения"></i>
                                </a>
                            </span>
                        </div>
                    </div>
                    <!-- for Dataset -->
                    <label class="m-0" for="dataset">Набор данных</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="dataset" onchange="ChangeLayers()">
                            <option value="watering">Орошаемые территории</option>
                            <option value="mskpol">Посевные поля</option>
                        </select>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <a href="#" target="_blank">
                                    <input type="checkbox" id="layerdatasetShow" checked="checked" onchange="ChangeLayers()">
                                </a>
                            </span>
                        </div>
                    </div>
                    <input id="layerdatasetOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                    <!-- Year -->
                    <label class="m-0" for="year">Год</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="year" onchange="ChangeLayers()">
                            <option value="2018">2018</option>
                            <option value="2019">2019</option>
                            <option value="2020" selected>2020</option>
                        </select>
                    </div>
                </form>
            </div>
            <ul class="list-unstyled menu-elements">
                <li>
                    <a href="#FilterKatoSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="FilterKatoSections">
                        <i class="fa fa-filter"></i>Поиск по КАТО
                    </a>
                    <div id="FilterKatoSections" class="collapse show" aria-labelledby="headingOne" data-parent="#FilterKatoSections">
                        <div class="card-body p-2">
                            <form>
                                <div class="form-group mb-0">
                                    <label class="m-0" for="cato1">Область</label>
                                    <select class="form-control form-control-sm" id="cato1" onchange="NavigateToCATO(this.value, 1)">
                                        <option value="">Казахстан</option>
                                        <option value="110000000">Акмолинская область</option>
                                        <option value="150000000">Актюбинская область</option>
                                        <option value="190000000">Алматинская область</option>
                                        <option value="230000000">Атырауская область</option>
                                        <option value="630000000">Восточно-Казахстанская область</option>
                                        <option value="750000000">г. Алматы</option>
                                        <option value="710000000">г. Нур-Султан</option>
                                        <option value="790000000">г.Шымкент</option>
                                        <option value="310000000">Жамбылская область</option>
                                        <option value="270000000">Западно-Казахстанская область</option>
                                        <option value="350000000">Карагандинская область</option>
                                        <option value="390000000">Костанайская область</option>
                                        <option value="430000000">Кызылординская область</option>
                                        <option value="470000000">Мангистауская область</option>
                                        <option value="550000000">Павлодарская область</option>
                                        <option value="590000000">Северо-Казахстанская область</option>
                                        <option value="610000000">Туркестанская область</option>
                                    </select>
                                </div>
                                <div class="form-group mb-0">
                                    <label class="m-0" for="cato2">Район</label>
                                    <select class="form-control form-control-sm" id="cato2" onchange="NavigateToCATO(this.value, 2)">
                                        <option value=""></option>
                                    </select>
                                </div>
                            </form>
                            <div class="to-top">
                                <a class="btn btn-success SomeInfo" role="button" onclick="Chart1()" InfoTitle="Для просмотра статистики выберите район или область">
                                    <i class="fas fa-chart-line"></i> Данные
                                </a>
                            </div>
                        </div>
                    </div>
                </li>
                <li class="">
                    <a href="#TematicLayerSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="TematicLayerSections">
                        <i class="fa fa-layer-group"></i>Тематические слои
                    </a>
                    <div id="TematicLayerSections" class="collapse show" aria-labelledby="headingOne" data-parent="#TematicLayerSections">
                        <div class="card-body">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layerpopShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layerpopShow">
                                    Населенные пункты
                                </label>
                                <input id="layerpopOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layeradm1polShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layeradm1polShow">
                                    Области
                                </label>
                                <input id="layeradm1polOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layeradm2polShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layeradm2polShow">
                                    Районы
                                </label>
                                <input id="layeradm2polOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layerhdrShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layerhdrShow">
                                    Реки, озера
                                </label>
                                <input id="layerhdrOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layerrdsShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layerrdsShow">
                                    Дороги
                                </label>
                                <input id="layerrdsOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                        </div>
                    </div>
                </li>
                <li>
                    <a href="#BaseLayerSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="BaseLayerSections">
                        <i class="fa fa-globe-americas"></i>Базовые слои
                    </a>
                    <div id="BaseLayerSections" class="collapse show" aria-labelledby="headingOne" data-parent="#BaseLayerSections">
                        <div class="card-body p-2">
                            <div class="input-group input-group-sm">
                                <select class="custom-select" id="layerBaseType" onchange="ChangeLayers()">
                                    <option value="OSM">OpenStreetMap</option>
                                    <option value="BingAerialWithLabels">Bing Aerial</option>
                                    <option value="BingRoadStatic">Bing Road (static)</option>
                                    <option value="BingRoadDynamic">Bing Road (dynamic)</option>
                                    <option value="HERENormalDay">HERE Normal Day</option>
                                    <option value="HERENormalDayTransit">HERE Normal Day Transit</option>
                                    <option value="HERETerrainDay">HERE Terrain Day</option>
                                    <option value="HEREHybridDay" selected>HERE Hybrid Day</option>
                                    <option value="StamenWatercolor">Stamen Watercolor</option>
                                    <option value="StamenTerrain">Stamen Terrain</option>
                                    <option value="StamenToner">Stamen Toner</option>
                                    <option value="ArcGIS">ArcGIS</option>
                                    <option value="ThunderforestOpenCycleMap">Thunderforest OpenCycleMap</option>
                                    <option value="ThunderforestTransport">Thunderforest Transport</option>
                                    <option value="ThunderforestLandscape">Thunderforest Landscape</option>
                                    <option value="ThunderforestOutdoors">Thunderforest Outdoors</option>
                                    <option value="ThunderforestSpinalMap">Thunderforest Spinal Map</option>
                                    <option value="ThunderforestPioneer">Thunderforest Pioneer</option>
                                    <option value="ThunderforestMobileAtlas">Thunderforest Mobile Atlas</option>
                                    <option value="ThunderforestNeighbourhood">Thunderforest Neighbourhood</option>
                                </select>
                                <div class="input-group-append">
                                    <div class="input-group-text">
                                        <input type="checkbox" id="layerBaseShow" checked="checked" onchange="ChangeLayers()">
                                    </div>
                                </div>
                            </div>
                            <input id="layerBaseOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                        </div>
                    </div>
                </li>
            </ul>
            

            @*<div class="dark-light-buttons">
                <a class="btn btn-primary btn-customized-4 btn-customized-dark" href="#" role="button">Dark</a>
                <a class="btn btn-primary btn-customized-4 btn-customized-light" href="#" role="button">Light</a>
            </div>*@
        </nav>
        <!-- End sidebar -->
        <!-- Dark overlay -->
        <div class="overlay"></div>
        <!-- Content -->
        <div class="content">
            <!-- open sidebar menu -->
            <a class="btn btn-primary btn-customized open-menu" href="#" role="button">
                <i class="fas fa-align-left"></i> <span>Меню</span>
            </a>
            <!-- Map content -->
            <div id="map" class="position-fixed col-md-12 col-lg-12 m-0 p-0 bg-light" style="height: 94vh;"></div>
            <!-- Footer -->
        </div>
        <!-- End content -->
    </div>
    <!-- End wrapper -->
</div>

<div class="col-md-auto" style="display: none" id="InfoMapContent">
    <ul class="nav nav-pills" id="InfoMapTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active text-white" id="pills-home-tab" data-toggle="pill" href="#pills-chart" role="tab" aria-controls="pills-chart" aria-selected="true">График</a>
        </li>
        <li class="nav-item text-white">
            <a class="nav-link text-white" id="pills-table-tab" data-toggle="pill" href="#pills-table" role="tab" aria-controls="pills-table" aria-selected="false">Таблица</a>
        </li>
    </ul>
    <div class="tab-content mt-n2" id="InfoMapTabContent">
        <div class="tab-pane fade show active" id="pills-chart" role="tabpanel" aria-labelledby="pills-chart-tab">
            <h3 id="ChartTitle" style="text-align: center;"></h3>
            <h4 style="text-align: center;">Площадь орошамой территории, га</h4>
            <canvas id="chart1Canvas" class="chartjs-render-monitor my-0 mh-100" width="600" height="380"></canvas>
        </div>
        <div class="tab-pane fade" id="pills-table" role="tabpanel" aria-labelledby="pills-table-tab">
            <table id="table1" class="table table-sm table-bordered">
                <thead>
                    <tr class="table-primary">
                        <td>
                            Год
                        </td>
                        <td>
                            Административная единица
                        </td>
                        <td>
                            Площадь (га)
                        </td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@* base layers *@
<script>
    var HEREappId = 'SLdBasp4s1oq2oUbVGxy';
    var HEREappCode = 'D9-h9iVhjgUB_9eUlFETXA';
    var Source_OSM = new ol.source.OSM();
    Source_BingAerialWithLabels = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'AerialWithLabels',
    });
    Source_BingRoadStatic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'Road',
    });
    Source_BingRoadDynamic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'RoadOnDemand',
    });
    var urlTpl = 'https://{1-4}.{base}.maps.cit.api.here.com' +
        '/{type}/2.1/maptile/newest/{scheme}/{z}/{x}/{y}/256/png' +
        '?app_id={app_id}&app_code={app_code}';
    function HEREcreateUrl(tpl, HERElayerDesc) {
        return tpl
            .replace('{base}', HERElayerDesc.base)
            .replace('{type}', HERElayerDesc.type)
            .replace('{scheme}', HERElayerDesc.scheme)
            .replace('{app_id}', HERElayerDesc.app_id)
            .replace('{app_code}', HERElayerDesc.app_code);
    };
    var HERElayerDescNormalDay = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });
    var HERElayerDescNormalDayTransit = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day.transit',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDayTransit = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDayTransit),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });
    var HERElayerDescTerrainDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'terrain.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERETerrainDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescTerrainDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });
    var HERElayerDescHybridDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'hybrid.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HEREHybridDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescHybridDay),
        attributions: 'Разработка &copy; ' + '<a href="http://kazniizhik.kz/">КазНИИЖиК</a>' + ' & Map Tiles &copy; ' + new Date().getFullYear() + ' ' + '<a href="http://developer.here.com">HERE</a>'
    });
    var Source_StamenWatercolor = new ol.source.Stamen({
        layer: 'watercolor'
    });
    var Source_StamenTerrain = new ol.source.Stamen({
        layer: 'terrain'
    });
    var Source_StamenToner = new ol.source.Stamen({
        layer: 'toner'
    });
    var Source_ArcGIS = new ol.source.XYZ({
        attributions: 'Tiles © <a href="https://services.arcgisonline.com/ArcGIS/' +
            'rest/services/World_Topo_Map/MapServer">ArcGIS</a>',
        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +
            'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
    });
    var Source_ThunderforestOpenCycleMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestTransport = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestLandscape = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestOutdoors = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestTransportDark = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestSpinalMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestPioneer = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestMobileAtlas = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Source_ThunderforestNeighbourhood = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });
    var Layer_Base = new ol.layer.Tile({
        source: Source_HEREHybridDay
    });
    Layer_Base.set('name', 'Base');
    Layer_Base.setOpacity(1);
    var layers = [];
    layers.push(Layer_Base);
</script>

@* layers *@
<script>
    var geoserver_url = '@ViewBag.GeoserverAddress';
    var Source_msk11pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk11pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk11pol = new ol.layer.Tile({
        source: Source_msk11pol
    });
    Layer_msk11pol.set('name', 'mskpol');
    Layer_msk11pol.setVisible(false);
    layers.push(Layer_msk11pol);

    var Source_msk31pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk31pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk31pol = new ol.layer.Tile({
        source: Source_msk31pol
    });
    Layer_msk31pol.set('name', 'mskpol');
    Layer_msk31pol.setVisible(false);
    layers.push(Layer_msk31pol);

    var Source_msk39pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk39pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk39pol = new ol.layer.Tile({
        source: Source_msk39pol
    });
    Layer_msk39pol.set('name', 'mskpol');
    Layer_msk39pol.setVisible(false);
    layers.push(Layer_msk39pol);

    var Source_msk55pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk55pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk55pol = new ol.layer.Tile({
        source: Source_msk55pol
    });
    Layer_msk55pol.set('name', 'mskpol');
    Layer_msk55pol.setVisible(false);
    layers.push(Layer_msk55pol);

    var Source_msk59pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk59pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk59pol = new ol.layer.Tile({
        source: Source_msk59pol
    });
    Layer_msk59pol.set('name', 'mskpol');
    Layer_msk59pol.setVisible(false);
    layers.push(Layer_msk59pol);

    var Source_msk61pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:msk61pol_4326',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_msk61pol = new ol.layer.Tile({
        source: Source_msk61pol
    });
    Layer_msk61pol.set('name', 'mskpol');
    Layer_msk61pol.setVisible(false);
    layers.push(Layer_msk61pol);

    var Source_watering112018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB11_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering112018 = new ol.layer.Tile({ source: Source_watering112018 }); Layer_watering112018.set('name', 'watering'); Layer_watering112018.set('year', '2018'); Layer_watering112018.setVisible(false); layers.push(Layer_watering112018);
    var Source_watering112019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB11_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering112019 = new ol.layer.Tile({ source: Source_watering112019 }); Layer_watering112019.set('name', 'watering'); Layer_watering112019.set('year', '2019'); Layer_watering112019.setVisible(false); layers.push(Layer_watering112019);
    var Source_watering112020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB11_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering112020 = new ol.layer.Tile({ source: Source_watering112020 }); Layer_watering112020.set('name', 'watering'); Layer_watering112020.set('year', '2020'); Layer_watering112020.setVisible(true); layers.push(Layer_watering112020);
    var Source_watering152018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB15_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering152018 = new ol.layer.Tile({ source: Source_watering152018 }); Layer_watering152018.set('name', 'watering'); Layer_watering152018.set('year', '2018'); Layer_watering152018.setVisible(false); layers.push(Layer_watering152018);
    var Source_watering152019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB15_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering152019 = new ol.layer.Tile({ source: Source_watering152019 }); Layer_watering152019.set('name', 'watering'); Layer_watering152019.set('year', '2019'); Layer_watering152019.setVisible(false); layers.push(Layer_watering152019);
    var Source_watering152020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB15_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering152020 = new ol.layer.Tile({ source: Source_watering152020 }); Layer_watering152020.set('name', 'watering'); Layer_watering152020.set('year', '2020'); Layer_watering152020.setVisible(true); layers.push(Layer_watering152020);
    var Source_watering192018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB19_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering192018 = new ol.layer.Tile({ source: Source_watering192018 }); Layer_watering192018.set('name', 'watering'); Layer_watering192018.set('year', '2018'); Layer_watering192018.setVisible(false); layers.push(Layer_watering192018);
    var Source_watering192019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB19_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering192019 = new ol.layer.Tile({ source: Source_watering192019 }); Layer_watering192019.set('name', 'watering'); Layer_watering192019.set('year', '2019'); Layer_watering192019.setVisible(false); layers.push(Layer_watering192019);
    var Source_watering192020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB19_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering192020 = new ol.layer.Tile({ source: Source_watering192020 }); Layer_watering192020.set('name', 'watering'); Layer_watering192020.set('year', '2020'); Layer_watering192020.setVisible(true); layers.push(Layer_watering192020);
    var Source_watering272018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB27_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering272018 = new ol.layer.Tile({ source: Source_watering272018 }); Layer_watering272018.set('name', 'watering'); Layer_watering272018.set('year', '2018'); Layer_watering272018.setVisible(false); layers.push(Layer_watering272018);
    var Source_watering272019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB27_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering272019 = new ol.layer.Tile({ source: Source_watering272019 }); Layer_watering272019.set('name', 'watering'); Layer_watering272019.set('year', '2019'); Layer_watering272019.setVisible(false); layers.push(Layer_watering272019);
    var Source_watering272020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB27_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering272020 = new ol.layer.Tile({ source: Source_watering272020 }); Layer_watering272020.set('name', 'watering'); Layer_watering272020.set('year', '2020'); Layer_watering272020.setVisible(true); layers.push(Layer_watering272020);
    var Source_watering312018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB31_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering312018 = new ol.layer.Tile({ source: Source_watering312018 }); Layer_watering312018.set('name', 'watering'); Layer_watering312018.set('year', '2018'); Layer_watering312018.setVisible(false); layers.push(Layer_watering312018);
    var Source_watering312019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB31_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering312019 = new ol.layer.Tile({ source: Source_watering312019 }); Layer_watering312019.set('name', 'watering'); Layer_watering312019.set('year', '2019'); Layer_watering312019.setVisible(false); layers.push(Layer_watering312019);
    var Source_watering312020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB31_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering312020 = new ol.layer.Tile({ source: Source_watering312020 }); Layer_watering312020.set('name', 'watering'); Layer_watering312020.set('year', '2020'); Layer_watering312020.setVisible(true); layers.push(Layer_watering312020);
    var Source_watering392018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB39_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering392018 = new ol.layer.Tile({ source: Source_watering392018 }); Layer_watering392018.set('name', 'watering'); Layer_watering392018.set('year', '2018'); Layer_watering392018.setVisible(false); layers.push(Layer_watering392018);
    var Source_watering392019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB39_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering392019 = new ol.layer.Tile({ source: Source_watering392019 }); Layer_watering392019.set('name', 'watering'); Layer_watering392019.set('year', '2019'); Layer_watering392019.setVisible(false); layers.push(Layer_watering392019);
    var Source_watering392020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB39_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering392020 = new ol.layer.Tile({ source: Source_watering392020 }); Layer_watering392020.set('name', 'watering'); Layer_watering392020.set('year', '2020'); Layer_watering392020.setVisible(true); layers.push(Layer_watering392020);
    var Source_watering432018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB43_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering432018 = new ol.layer.Tile({ source: Source_watering432018 }); Layer_watering432018.set('name', 'watering'); Layer_watering432018.set('year', '2018'); Layer_watering432018.setVisible(false); layers.push(Layer_watering432018);
    var Source_watering432019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB43_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering432019 = new ol.layer.Tile({ source: Source_watering432019 }); Layer_watering432019.set('name', 'watering'); Layer_watering432019.set('year', '2019'); Layer_watering432019.setVisible(false); layers.push(Layer_watering432019);
    var Source_watering432020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB43_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering432020 = new ol.layer.Tile({ source: Source_watering432020 }); Layer_watering432020.set('name', 'watering'); Layer_watering432020.set('year', '2020'); Layer_watering432020.setVisible(true); layers.push(Layer_watering432020);
    var Source_watering552018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB55_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering552018 = new ol.layer.Tile({ source: Source_watering552018 }); Layer_watering552018.set('name', 'watering'); Layer_watering552018.set('year', '2018'); Layer_watering552018.setVisible(false); layers.push(Layer_watering552018);
    var Source_watering552019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB55_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering552019 = new ol.layer.Tile({ source: Source_watering552019 }); Layer_watering552019.set('name', 'watering'); Layer_watering552019.set('year', '2019'); Layer_watering552019.setVisible(false); layers.push(Layer_watering552019);
    var Source_watering552020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB55_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering552020 = new ol.layer.Tile({ source: Source_watering552020 }); Layer_watering552020.set('name', 'watering'); Layer_watering552020.set('year', '2020'); Layer_watering552020.setVisible(true); layers.push(Layer_watering552020);
    var Source_watering592018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB59_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering592018 = new ol.layer.Tile({ source: Source_watering592018 }); Layer_watering592018.set('name', 'watering'); Layer_watering592018.set('year', '2018'); Layer_watering592018.setVisible(false); layers.push(Layer_watering592018);
    var Source_watering592019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB59_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering592019 = new ol.layer.Tile({ source: Source_watering592019 }); Layer_watering592019.set('name', 'watering'); Layer_watering592019.set('year', '2019'); Layer_watering592019.setVisible(false); layers.push(Layer_watering592019);
    var Source_watering592020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB59_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering592020 = new ol.layer.Tile({ source: Source_watering592020 }); Layer_watering592020.set('name', 'watering'); Layer_watering592020.set('year', '2020'); Layer_watering592020.setVisible(true); layers.push(Layer_watering592020);
    var Source_watering612018 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB61_2018_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering612018 = new ol.layer.Tile({ source: Source_watering612018 }); Layer_watering612018.set('name', 'watering'); Layer_watering612018.set('year', '2018'); Layer_watering612018.setVisible(false); layers.push(Layer_watering612018);
    var Source_watering612019 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB61_2019_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering612019 = new ol.layer.Tile({ source: Source_watering612019 }); Layer_watering612019.set('name', 'watering'); Layer_watering612019.set('year', '2019'); Layer_watering612019.setVisible(false); layers.push(Layer_watering612019);
    var Source_watering612020 = new ol.source.TileWMS({ url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?', params: { 'LAYERS': 'Diseases:AB61_2020_watering_4326', 'FORMAT': 'image/png' }, serverType: 'geoserver' }); var Layer_watering612020 = new ol.layer.Tile({ source: Source_watering612020 }); Layer_watering612020.set('name', 'watering'); Layer_watering612020.set('year', '2020'); Layer_watering612020.setVisible(true); layers.push(Layer_watering612020);
    var Source_hdrlin = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:hdrlin',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_hdrlin = new ol.layer.Tile({
        source: Source_hdrlin
    });
    Layer_hdrlin.set('name', 'hdr');
    layers.push(Layer_hdrlin);
    var Source_hdrpol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:hdrpol',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_hdrpol = new ol.layer.Tile({
        source: Source_hdrpol
    });
    Layer_hdrpol.set('name', 'hdr');
    layers.push(Layer_hdrpol);
    var Source_poppnt = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:poppnt',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_poppnt = new ol.layer.Tile({
        source: Source_poppnt
    });
    Layer_poppnt.set('name', 'pop');
    layers.push(Layer_poppnt);
    var Source_poppol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:poppol',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_poppol = new ol.layer.Tile({
        source: Source_poppol
    });
    Layer_poppol.set('name', 'pop');
    layers.push(Layer_poppol);
    var Source_rdslin = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:rdslin',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_rdslin = new ol.layer.Tile({
        source: Source_rdslin
    });
    Layer_rdslin.set('name', 'rds');
    layers.push(Layer_rdslin);
    var Source_adm1pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:adm1pol20201005',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_adm1pol = new ol.layer.Tile({
        source: Source_adm1pol
    });
    Layer_adm1pol.set('name', 'adm1pol');
    layers.push(Layer_adm1pol);
    var Source_adm2pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:adm2pol20201005',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_adm2pol = new ol.layer.Tile({
        source: Source_adm2pol
    });
    Layer_adm2pol.set('name', 'adm2pol');
    layers.push(Layer_adm2pol);
    var Layer_admXpol_Navigate = new ol.layer.Vector({
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: 'transparent'
            }),
            stroke: new ol.style.Stroke({
                color: 'red',
                width: 4
            })
        })
    });
    Layer_admXpol_Navigate.set('name', 'admxpolnavigate');
    layers.push(Layer_admXpol_Navigate);
</script>

@* map *@
<script>
    // permalink
    var zoom = 5;
    var center = ol.proj.fromLonLat([66.902, 48.714]);
    var rotation = 0;
    if (window.location.hash !== '') {
        // try to restore center, zoom-level and rotation from the URL
        var hash = window.location.hash.replace('#map=', '');
        var parts = hash.split('/');
        if (parts.length === 4) {
            zoom = parseInt(parts[0], 10);
            center = [
                parseFloat(parts[1]),
                parseFloat(parts[2])
            ];
            rotation = parseFloat(parts[3]);
        }
    }
    var map = new ol.Map({
        target: 'map',
        controls: new ol.control.defaults({ attributionOptions: { collapsible: true } }).extend([
            new ol.control.ScaleLine()
        ]),
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([66.902, 48.714]),
            zoom: 5,
            minZoom: 5,
            extent: [5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296]
        })
    });
    // permalink
    var shouldUpdate = true;
    var view = map.getView();
    var updatePermalink = function () {
        if (!shouldUpdate) {
            // do not update the URL when the view was changed in the 'popstate' handler
            shouldUpdate = true;
            return;
        }
        var center = view.getCenter();
        var hash = '#map=' +
            view.getZoom() + '/' +
            Math.round(center[0] * 100) / 100 + '/' +
            Math.round(center[1] * 100) / 100 + '/' +
            view.getRotation();
        var state = {
            zoom: view.getZoom(),
            center: view.getCenter(),
            rotation: view.getRotation()
        };
        window.history.pushState(state, 'map', hash);
    };
    map.on('moveend', updatePermalink);
    window.addEventListener('popstate', function (event) {
        if (event.state === null) {
            return;
        }
        map.getView().setCenter(event.state.center);
        map.getView().setZoom(event.state.zoom);
        map.getView().setRotation(event.state.rotation);
        shouldUpdate = false;
    });
    function ToHome() {
        map.getView().fit([5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296], map.getSize());
        Layer_select_pasturepol.getSource().clear();
        if (Layer_admXpol_Navigate.getSource()) {
            Layer_admXpol_Navigate.getSource().clear();
        }
    };
</script>

@* ChangeLayers *@
<script>
    function ChangeLayers() {
        map.getLayers().forEach(function (layer) {
            if (layer.get('name') == 'Base') {
                layer.setVisible(document.getElementById("layerBaseShow").checked);
                layer.setOpacity($('#layerBaseOpacity').val() / 100)
                if ($('#layerBaseType').val() == 'OSM') {
                    layer.setSource(Source_OSM);
                }
                else if ($('#layerBaseType').val() == 'BingAerialWithLabels') {
                    layer.setSource(Source_BingAerialWithLabels);
                }
                else if ($('#layerBaseType').val() == 'BingRoadStatic') {
                    layer.setSource(Source_BingRoadStatic);
                }
                else if ($('#layerBaseType').val() == 'BingRoadDynamic') {
                    layer.setSource(Source_BingRoadDynamic);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDay') {
                    layer.setSource(Source_HERENormalDay);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDayTransit') {
                    layer.setSource(Source_HERENormalDayTransit);
                }
                else if ($('#layerBaseType').val() == 'HERETerrainDay') {
                    layer.setSource(Source_HERETerrainDay);
                }
                else if ($('#layerBaseType').val() == 'HEREHybridDay') {
                    layer.setSource(Source_HEREHybridDay);
                }
                else if ($('#layerBaseType').val() == 'StamenWatercolor') {
                    layer.setSource(Source_StamenWatercolor);
                }
                else if ($('#layerBaseType').val() == 'StamenTerrain') {
                    layer.setSource(Source_StamenTerrain);
                }
                else if ($('#layerBaseType').val() == 'StamenToner') {
                    layer.setSource(Source_StamenToner);
                }
                else if ($('#layerBaseType').val() == 'ArcGIS') {
                    layer.setSource(Source_ArcGIS);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOpenCycleMap') {
                    layer.setSource(Source_ThunderforestOpenCycleMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransport') {
                    layer.setSource(Source_ThunderforestTransport);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestLandscape') {
                    layer.setSource(Source_ThunderforestLandscape);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOutdoors') {
                    layer.setSource(Source_ThunderforestOutdoors);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransportDark') {
                    layer.setSource(Source_ThunderforestTransportDark);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestSpinalMap') {
                    layer.setSource(Source_ThunderforestSpinalMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestPioneer') {
                    layer.setSource(Source_ThunderforestPioneer);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestMobileAtlas') {
                    layer.setSource(Source_ThunderforestMobileAtlas);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestNeighbourhood') {
                    layer.setSource(Source_ThunderforestNeighbourhood);
                }
            }
            if (layer.get('name') == 'adm1pol') {
                layer.setVisible(document.getElementById("layeradm1polShow").checked);
                layer.setOpacity($('#layeradm1polOpacity').val() / 100);
            }
            if (layer.get('name') == 'adm2pol') {
                layer.setVisible(document.getElementById("layeradm2polShow").checked);
                layer.setOpacity($('#layeradm2polOpacity').val() / 100);
            }
            if (layer.get('name') == 'mskpol') {
                var visible = document.getElementById("layerdatasetShow").checked;
                if ($('#dataset').val() != 'mskpol') {
                    visible = false;
                }
                layer.setVisible(visible);
                layer.setOpacity($('#layerdatasetOpacity').val() / 100);
            }
            if (layer.get('name') == 'watering') {
                if (layer.get('year') == $('#year').val()) {
                    //layer.setVisible(document.getElementById("layerwateringShow").checked);
                    var visible = document.getElementById("layerdatasetShow").checked;
                    if ($('#dataset').val() != 'watering') {
                        visible = false;
                    }
                    layer.setVisible(visible);
                }
                else {
                    layer.setVisible(false);
                }
                layer.setOpacity($('#layerdatasetOpacity').val() / 100);
            }
            if (layer.get('name') == 'hdr') {
                layer.setVisible(document.getElementById("layerhdrShow").checked);
                layer.setOpacity($('#layerhdrOpacity').val() / 100);
            }
            if (layer.get('name') == 'pop') {
                layer.setVisible(document.getElementById("layerpopShow").checked);
                layer.setOpacity($('#layerpopOpacity').val() / 100);
            }
            if (layer.get('name') == 'rds') {
                layer.setVisible(document.getElementById("layerrdsShow").checked);
                layer.setOpacity($('#layerrdsOpacity').val() / 100);
            }
        });
        ChangeInfo();
    }
</script>

@* NavigateToCATO *@
<script>
    function NavigateToCATO(te, layer) {
        if (Layer_admXpol_Navigate.getSource() != null) {
            Layer_admXpol_Navigate.getSource().clear();
        }
        if (te == '' && layer == 1) {
            Layer_admXpol_Navigate.getSource().clear();
            map.getView().fit([5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296], map.getSize());
            ChangeInfo();
            return;
        }
        if (te == '' && layer == 2) {
            te = $('#cato1').val();
            layer = 1;
        }
        if (InfoMapModalOpened) {
            Chart1();
        }
        var filter = "kato_te = '" + te + "'";
        var filterParams = {
            'FILTER': null,
            'CQL_FILTER': null,
            'FEATUREID': null
        };
        if (filter.replace(/^\s\s*/, '').replace(/\s\s*$/, '') != "") {
            filterParams["CQL_FILTER"] = filter;
        }
        url_admXpol_Navigate = "http://" + geoserver_url + "/geoserver/" + "Diseases/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Diseases:adm" + layer.toString() + "pol20201005&CQL_FILTER=" + filter + "&outputFormat=text/javascript&format_options=callback:getJson";
        $.ajax({
            jsonp: false,
            jsonpCallback: 'getJson',
            type: 'GET',
            url: url_admXpol_Navigate,
            async: false,
            dataType: 'jsonp',
            success: function (data_admXpol_Navigate) {
                var features = (new ol.format.GeoJSON()).readFeatures(data_admXpol_Navigate, {
                    featureProjection: 'EPSG:3857'
                }),
                    new_source = new ol.source.Vector({
                        features: features
                    });
                Layer_admXpol_Navigate.setSource(new_source);
                map.getView().fit(Layer_admXpol_Navigate.getSource().getExtent());
                ChangeInfo();
                if (layer == 1) {
                    var ab = features[0].get('kato_te').toString().substr(0, 2);
                    filter = "kato_te%20LIKE%20%27" + ab + "%25%27";
                    layer = 2;
                    url_admXpol_Navigate = "http://" + geoserver_url + "/geoserver/" + "Diseases/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Diseases:adm" + layer.toString() + "pol20201005&CQL_FILTER=" + filter + "&outputFormat=text/javascript&format_options=callback:getJson";
                    $.ajax({
                        jsonp: false,
                        jsonpCallback: 'getJson',
                        type: 'GET',
                        url: url_admXpol_Navigate,
                        async: false,
                        dataType: 'jsonp',
                        success: function (data_adm2pol) {
                            var features_adm2pol = (new ol.format.GeoJSON()).readFeatures(data_adm2pol, {
                                featureProjection: 'EPSG:3857'
                            });
                            $('#cato2').empty();
                            $('#cato2').append($("<option />"));
                            for (var i = 0; i < features_adm2pol.length; i++) {
                                $('#cato2').append($("<option />").val(features_adm2pol[i].get('kato_te')).text(features_adm2pol[i].get('name_adm2')));
                            }
                            ChangeInfo();
                        }
                    })
                }
            }
        });
        ChangeInfo();
    }
    function ChangeInfo() {
        $('#infoTitle').text($('#cato1 option:selected').text());
        $('#infoText').text($('#cato2 option:selected').text());
        $('#infoDataset').text($('#dataset option:selected').text());
        $('#infoDate').text($('#year option:selected').text());
    }
</script>

@* Chart *@
<script>
    var InfoMapModal,
        InfoMapModalOpened = false;
    $(document).ready(function () {
        InfoMapModal = new jBox('Modal', {
            id: 'modal-info',
            minWidth: 600,
            maxHeight: 500,
            adjustTracker: 'scroll',
            zIndex: 'auto',
            draggable: 'title',
            closeOnClick: false,
            closeButton: 'title',
            animation: 'zoomIn',
            overlay: false,
            onOpen: function () {
                // Add t
                this.setContent($('#InfoMapTabContent'));
                this.setTitle($('#InfoMapTab'));
                InfoMapModalOpened = true;
            },
            onClose: function () {
                InfoMapModalOpened = false;
            }
        });
    });

    var chart1 = null;
    function Chart1() {
        InfoMapModal.open();
        var kato = $('#cato1').val();
        if ($('#cato2').val() != '') {
            kato = $('#cato2').val();
        }
        $.ajax({
            url: '@Url.Action("GetIrrigationData")',
            data: {
                kato: kato
            },
            type: 'POST',
            success: function (data) {
                var title = $('#cato1 option:selected').text();
                if ($('#cato2 option:selected').text() != '') {
                    title = $('#cato2 option:selected').text();
                }
                $('#ChartTitle').text(title);
                var chart1Data = {
                    labels: data.labels,
                    datasets: []
                };
                if ($('#cato1').val() == '') {
                    for (var i = 0; i < data.w.length; i++) {
                        var exist = false;
                        for (var j = 0; j < chart1Data.datasets.length; j++) {
                            if (data.w[i].adm1 == chart1Data.datasets[j].label) {
                                exist = true;
                                break;
                            }
                        }
                        if (!exist) {
                            var ddata = [];
                            for (var j = 0; j < data.w.length; j++) {
                                if (data.w[i].adm1 == data.w[j].adm1) {
                                    ddata.push(data.w[j].area.toFixed(2));
                                }
                            }
                            chart1Data.datasets.push({
                                label: data.w[i].adm1,
                                backgroundColor: dynamicColor(),
                                borderColor: dynamicColor(),
                                borderWidth: 1,
                                data: ddata
                            });
                        }
                    }
                }
                else if ($('#cato1').val() != '' && $('#cato2').val() == '') {
                    for (var i = 0; i < data.w.length; i++) {
                        var exist = false;
                        for (var j = 0; j < chart1Data.datasets.length; j++) {
                            if (data.w[i].adm2 == chart1Data.datasets[j].label) {
                                exist = true;
                                break;
                            }
                        }
                        if (!exist) {
                            var ddata = [];
                            for (var j = 0; j < data.w.length; j++) {
                                if (data.w[i].adm2 == data.w[j].adm2) {
                                    ddata.push(data.w[j].area.toFixed(2));
                                }
                            }
                            chart1Data.datasets.push({
                                label: data.w[i].adm2,
                                backgroundColor: dynamicColor(),
                                borderColor: dynamicColor(),
                                borderWidth: 1,
                                data: ddata
                            });
                        }
                    }
                }
                else {
                    for (var i = 0; i < data.w.length; i++) {
                        var exist = false;
                        for (var j = 0; j < chart1Data.datasets.length; j++) {
                            if (data.w[i].adm2 == chart1Data.datasets[j].label) {
                                exist = true;
                                break;
                            }
                        }
                        if (!exist) {
                            var ddata = [];
                            for (var j = 0; j < data.w.length; j++) {
                                if (data.w[i].adm2 == data.w[j].adm2) {
                                    ddata.push(data.w[j].area.toFixed(2));
                                }
                            }
                            chart1Data.datasets.push({
                                label: data.w[i].adm2,
                                backgroundColor: dynamicColor(),
                                borderColor: dynamicColor(),
                                borderWidth: 1,
                                data: ddata
                            });
                        }
                    }
                }
                var ctx1 = document.getElementById('chart1Canvas').getContext('2d');
                if (chart1 != null) {
                    chart1.destroy();
                }
                chart1 = new Chart(ctx1, {
                    type: 'bar',
                    data: chart1Data,
                    options: {
                        responsive: true,
                        legend: {
                            position: 'bottom',
                        },
                        tooltips: {
                            mode: 'index',
                            intersect: false
                        }
                    }
                });
                $('#table1').find('tr:gt(0)').remove();
                if ($('#cato1').val() == '') {
                    for (var y = 0; y < data.labels.length; y++) {
                        for (var i = 0; i < data.w.length; i++) {
                            if (data.w[i].year == data.labels[y]) {
                                $('#table1').append($('<tr><td>' + data.w[i].year + '</td><td>' + data.w[i].adm1 + '</td><td>' + data.w[i].area.toFixed(2) + '</td></tr>'));
                            }
                        }
                    }
                }
                else {
                    for (var y = 0; y < data.labels.length; y++) {
                        for (var i = 0; i < data.w.length; i++) {
                            if (data.w[i].year == data.labels[y]) {
                                $('#table1').append($('<tr><td>' + data.w[i].year + '</td><td>' + data.w[i].adm2 + '</td><td>' + data.w[i].area.toFixed(2) + '</td></tr>'));
                            }
                        }
                    }
                }
            },
            error: function () {
                
            }
        });
    };

    function dynamicColor() {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return "rgb(" + r + "," + g + "," + b + ")";
    };
</script>

@* Menu *@
<script>
    jQuery(document).ready(function () {
        /*
            Sidebar
        */
        $('.dismiss, .overlay').on('click', function () {
            $('.sidebar').removeClass('active');
            $('.overlay').removeClass('active');
        });
        $('.open-menu').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('active');
            // close opened sub-menus
            $('.collapse.show').toggleClass('show');
            $('a[aria-expanded=true]').attr('aria-expanded', 'false');
        });
        /* change sidebar style */
        $('a.btn-customized-dark').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').removeClass('light');
        });
        $('a.btn-customized-light').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('light');
        });
    });
</script>

@*tooltips, modal windows*@
<script>
    $(document).ready(function () {
        // Map Title
        new jBox('Modal', {
            id: 'modal-maptitle',
            attach: '#MapTitleBtn',
            width: 260,
            blockScroll: false,
            animation: 'flip',
            closeButton: false,
            position: {
                x: 'right',
                y: 'top'
            },
            offset: {
                x: -10,
                y: 70
            },
            content: '<div class="card-body text-white text-center p-0"><h4 class="card-title" id="infoTitle">Satellite</h5><p class="card-text mb-1" id="infoDataset">Dataset</p><p class="card-text" id="infoDate">YYYY. JDay: DD/MM - DD/MM</p></div >',
            overlay: false,
            repositionOnOpen: false
        }).open();
        // Map Legend
        new jBox('Modal', {
            attach: '#LegendBtn',
            id: 'modal-maptitle',
            width: 220,
            overlay: false,
            content: '<div class= "p-0" > <img id="legend" class="card-img-top" src="/images/Irrigation/Irrigation.svg"></div>',
            draggable: 'title',
            repositionOnOpen: false,
            repositionOnContent: false,
            position: {
                x: 'right',
                y: 'center'
            },
            offset: {
                x: -10
            }
        });
        // Tooltip below to the right
        new jBox('Tooltip', {
            theme: 'TooltipDark',
            zIndex: 'auto',
            attach: '.SomeInfo',
            getTitle: 'InfoTitle',
            position: {
                x: 'right',
                y: 'center'
            },
            outside: 'x' // Horizontal Tooltips need to change their outside position
        });
        ChangeInfo();
    });
</script>