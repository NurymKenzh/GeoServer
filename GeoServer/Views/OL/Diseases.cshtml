
@{
    ViewData["Title"] = "Карта";
    Layout = "~/Views/Shared/_LayoutDiseases.cshtml";
}

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@

<script src="~/lib/jquery/dist/jquery.js"></script>
<link href="~/lib/jquery-ui/jquery-ui.css" rel="stylesheet" />
<script src="~/lib/jquery-ui/jquery-ui.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" />
<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>
@*jBox*@
<link href="~/lib/vendor/jBox/dist/jBox.all.css" rel="stylesheet" />
<script src="~/lib/vendor/jBox/dist/jBox.all.js"></script>


<div class="container-fluid p-0">
    <!-- Wrapper -->
    <div class="wrapper">
        <!-- Sidebar -->
        <nav class="sidebar">
            <!-- close sidebar menu -->
            <div class="dismiss">
                <i class="fa fa-arrow-left"></i>
            </div>
            <div class="logo">
                <h3><a href="#">Меню</a></h3>
            </div>
            <div class="card-body p-2">                
                <form>
                    <label class="m-0" for="scenario">
                        Сценарий
                    </label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="scenario">
                            <option>Модели</option>
                            <option>Риски</option>
                        </select>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <a href="#">
                                    <i class="SomeInfo fa fa-tag"></i>
                                </a>
                            </span>
                        </div>
                    </div>
                    <div class="form-group mb-0">
                        <label class="m-0" for="area">КАТО</label>
                        <select class="form-control form-control-sm" id="area" onchange="ChangeArea()">
                            <optgroup label="Страна">
                                <option value="kz">Казахстан</option>
                            </optgroup>
                            <optgroup label="Области">
                                <option value="AB11">Акмолинская область</option>
                                <option value="AB39">Костанайская область</option>
                                <option value="AB55">Павлодарская область</option>
                                <option value="AB59">Северо-Казахстанская область</option>
                            </optgroup>
                            <optgroup label="Хозяйства">
                                <option value="NK">Новокубанка</option>
                            </optgroup>
                        </select>
                    </div>
                </form>
                <form>
                    <label class="m-0" for="disease">Болезни и вредители</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="disease" onchange="ChangeDisease()">
                            <option value="morocco_nesting">Условия зимовки кубышек мароккской саранчи</option>
                            <option value="Prus_nesting">Условия зимовки кубышек итальянского пруса</option>
                        </select>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <a href="#">
                                    <i class="SomeInfo fa fa-info-circle"></i>
                                </a>
                            </span>
                        </div>
                        <input id="layerdiseaseOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                    </div>
                    <label class="m-0" for="year">Год</label>
                    <div class="input-group input-group-sm">
                        <select class="form-control" id="year" onchange="ChangeYear()">
                            <option value="2020">2020</option>
                        </select>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <a href="#" target="_blank">
                                    <input type="checkbox" id="layerdiseaseShow" checked="checked" oninput="ChangeLayers()">
                                </a>
                            </span>
                        </div>
                    </div>

                    <label class="m-0" for="date">Дата</label>
                    <!-- Day -->
                    <div class="input-group input-group-sm">
                        <select class="custom-select" id="date" aria-describedby="DayHelpBlock" onchange="ChangeDate()">
                            <option value="1">001:02/01 - 08/01</option>
                            <option value="2">002:08/01 - 08/16</option>
                        </select>
                    </div>
                </form>
            </div>

            <ul class="list-unstyled menu-elements">
                <li class="">
                    <a href="#TematicLayerSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="TematicLayerSections">
                        <i class="fa fa-layer-group"></i>Тематические слои
                    </a>
                    <div id="TematicLayerSections" class="collapse show" aria-labelledby="headingOne" data-parent="#TematicLayerSections">
                        <div class="card-body">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layeradm1polShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layeradm1polShow">
                                    Области
                                </label>
                                <input id="layeradm1polOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layeradm2polShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layeradm2polShow">
                                    Районы
                                </label>
                                <input id="layeradm2polOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="layernovokubankaShow" checked="checked" onchange="ChangeLayers()">
                                <label class="form-check-label" for="layernovokubankaShow">
                                    Хозяйства
                                </label>
                                <input id="layernovokubankaOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                            </div>
                        </div>
                    </div>
                </li>
                <li>
                    <a href="#BaseLayerSections" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle" role="button" aria-controls="BaseLayerSections">
                        <i class="fa fa-globe-americas"></i>Базовые слои
                    </a>
                    <div id="BaseLayerSections" class="collapse show" aria-labelledby="headingOne" data-parent="#BaseLayerSections">
                        <div class="card-body p-2">
                            <div class="input-group input-group-sm">
                                <select class="custom-select" id="layerBaseType" onchange="ChangeLayers()">
                                    <option value="OSM">OpenStreetMap</option>
                                    <option value="BingAerialWithLabels">Bing Aerial</option>
                                    <option value="BingRoadStatic">Bing Road (static)</option>
                                    <option value="BingRoadDynamic">Bing Road (dynamic)</option>
                                    <option value="HERENormalDay">HERE Normal Day</option>
                                    <option value="HERENormalDayTransit">HERE Normal Day Transit</option>
                                    <option value="HERETerrainDay">HERE Terrain Day</option>
                                    <option value="HEREHybridDay" selected>HERE Hybrid Day</option>
                                    <option value="StamenWatercolor">Stamen Watercolor</option>
                                    <option value="StamenTerrain">Stamen Terrain</option>
                                    <option value="StamenToner">Stamen Toner</option>
                                    <option value="ArcGIS">ArcGIS</option>
                                    <option value="ThunderforestOpenCycleMap">Thunderforest OpenCycleMap</option>
                                    <option value="ThunderforestTransport">Thunderforest Transport</option>
                                    <option value="ThunderforestLandscape">Thunderforest Landscape</option>
                                    <option value="ThunderforestOutdoors">Thunderforest Outdoors</option>
                                    <option value="ThunderforestSpinalMap">Thunderforest Spinal Map</option>
                                    <option value="ThunderforestPioneer">Thunderforest Pioneer</option>
                                    <option value="ThunderforestMobileAtlas">Thunderforest Mobile Atlas</option>
                                    <option value="ThunderforestNeighbourhood">Thunderforest Neighbourhood</option>
                                </select>
                                <div class="input-group-append">
                                    <div class="input-group-text">
                                        <input type="checkbox" id="layerBaseShow" checked="checked" onchange="ChangeLayers()">
                                    </div>
                                </div>
                            </div>
                            <input id="layerBaseOpacity" type="range" class="form-control-range" min="0" max="100" value="100" oninput="ChangeLayers()" />
                        </div>
                    </div>
                </li>
            </ul>
            <div class="to-top">
                <a class="btn btn-primary btn-customized-3" href="#" role="button">
                    <i class="fas fa-bar-chart"></i> Chart or Other
                </a>
            </div>

            <div class="dark-light-buttons">
                <a class="btn btn-primary btn-customized-4 btn-customized-dark" href="#" role="button">Dark</a>
                <a class="btn btn-primary btn-customized-4 btn-customized-light" href="#" role="button">Light</a>
            </div>
        </nav>
        <!-- End sidebar -->
        <!-- Dark overlay -->
        <div class="overlay"></div>
        <!-- Content -->
        <div class="content">
            <!-- open sidebar menu -->
            <a class="btn btn-primary btn-customized open-menu" href="#" role="button">
                <i class="fas fa-align-left"></i> <span>Меню</span>
            </a>
            <!-- Map content -->
            <div id="map" class="position-fixed col-md-12 col-lg-12 m-0 p-0 bg-light" style="height: 94vh;"></div>
            <!-- Footer -->
        </div>
        <!-- End content -->
    </div>
    <!-- End wrapper -->
</div>

@* base layers *@
<script>
    var HEREappId = 'SLdBasp4s1oq2oUbVGxy';
    var HEREappCode = 'D9-h9iVhjgUB_9eUlFETXA';

    var Source_OSM = new ol.source.OSM();

    Source_BingAerialWithLabels = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'AerialWithLabels',
    });

    Source_BingRoadStatic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'Road',
    });
    Source_BingRoadDynamic = new ol.source.BingMaps({
        key: 'AmYNYRGlIrw_kppWvrIhfzY1v046b4Ft5nopz6Av94XDvTTo8xTkHCEaZ_zMwCOJ',
        imagerySet: 'RoadOnDemand',
    });

    var urlTpl = 'https://{1-4}.{base}.maps.cit.api.here.com' +
        '/{type}/2.1/maptile/newest/{scheme}/{z}/{x}/{y}/256/png' +
        '?app_id={app_id}&app_code={app_code}';
    function HEREcreateUrl(tpl, HERElayerDesc) {
        return tpl
            .replace('{base}', HERElayerDesc.base)
            .replace('{type}', HERElayerDesc.type)
            .replace('{scheme}', HERElayerDesc.scheme)
            .replace('{app_id}', HERElayerDesc.app_id)
            .replace('{app_code}', HERElayerDesc.app_code);
    };

    var HERElayerDescNormalDay = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescNormalDayTransit = {
        base: 'base',
        type: 'maptile',
        scheme: 'normal.day.transit',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERENormalDayTransit = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescNormalDayTransit),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescTerrainDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'terrain.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HERETerrainDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescTerrainDay),
        attributions: 'Map Tiles &copy; ' + new Date().getFullYear() + ' ' +
            '<a href="http://developer.here.com">HERE</a>'
    });

    var HERElayerDescHybridDay = {
        base: 'aerial',
        type: 'maptile',
        scheme: 'hybrid.day',
        app_id: HEREappId,
        app_code: HEREappCode
    };
    var Source_HEREHybridDay = new ol.source.XYZ({
        url: HEREcreateUrl(urlTpl, HERElayerDescHybridDay),
        attributions: 'Разработка &copy; ' + '<a href="http://kazniizhik.kz/">КазНИИЖиК</a>' + ' & Map Tiles &copy; ' + new Date().getFullYear() + ' ' + '<a href="http://developer.here.com">HERE</a>'
    });

    var Source_StamenWatercolor = new ol.source.Stamen({
        layer: 'watercolor'
    });

    var Source_StamenTerrain = new ol.source.Stamen({
        layer: 'terrain'
    });

    var Source_StamenToner = new ol.source.Stamen({
        layer: 'toner'
    });

    var Source_ArcGIS = new ol.source.XYZ({
        attributions: 'Tiles © <a href="https://services.arcgisonline.com/ArcGIS/' +
            'rest/services/World_Topo_Map/MapServer">ArcGIS</a>',
        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +
            'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
    });

    var Source_ThunderforestOpenCycleMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransport = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestLandscape = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestOutdoors = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestTransportDark = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestSpinalMap = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestPioneer = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestMobileAtlas = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Source_ThunderforestNeighbourhood = new ol.source.XYZ({
        url: 'https://{a-c}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png' +
            '?apikey=6746f4299ea3479aba8726b09f049c1b'
    });

    var Layer_Base = new ol.layer.Tile({
        source: Source_HEREHybridDay
    });
    Layer_Base.set('name', 'Base');
    Layer_Base.setOpacity(1);

    var layers = [];
    layers.push(Layer_Base);
</script>

@* layers *@
<script>
    var geoserver_url = '@ViewBag.GeoserverAddress';

    var Source_disease = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:morocco_nesting',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_disease = new ol.layer.Tile({
        source: Source_disease
    });
    Layer_disease.set('name', 'disease');
    layers.push(Layer_disease);

    var Source_adm1pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:adm1pol20201005',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_adm1pol = new ol.layer.Tile({
        source: Source_adm1pol
    });
    Layer_adm1pol.set('name', 'adm1pol');
    layers.push(Layer_adm1pol);

    var Source_adm2pol = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:adm2pol20201005',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_adm2pol = new ol.layer.Tile({
        source: Source_adm2pol
    });
    Layer_adm2pol.set('name', 'adm2pol');
    layers.push(Layer_adm2pol);

    var Source_novokubanka = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:novokubanka',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_novokubanka = new ol.layer.Tile({
        source: Source_novokubanka
    });
    Layer_novokubanka.set('name', 'novokubanka');
    layers.push(Layer_novokubanka);

    var Source_novokubanka = new ol.source.TileWMS({
        url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
        params: {
            'LAYERS': 'Diseases:novokubanka',
            'FORMAT': 'image/png',
        },
        serverType: 'geoserver'
    });
    var Layer_novokubanka = new ol.layer.Tile({
        source: Source_novokubanka
    });
    Layer_novokubanka.set('name', 'novokubanka');
    layers.push(Layer_novokubanka);
</script>

@* map *@
<script>
    // permalink
    var zoom = 5;
    var center = ol.proj.fromLonLat([66.902, 48.714]);
    var rotation = 0;
    if (window.location.hash !== '') {
        // try to restore center, zoom-level and rotation from the URL
        var hash = window.location.hash.replace('#map=', '');
        var parts = hash.split('/');
        if (parts.length === 4) {
            zoom = parseInt(parts[0], 10);
            center = [
                parseFloat(parts[1]),
                parseFloat(parts[2])
            ];
            rotation = parseFloat(parts[3]);
        }
    }

    var map = new ol.Map({
        target: 'map',
        controls: new ol.control.defaults({ attributionOptions: { collapsible: true } }).extend([
            new ol.control.ScaleLine()
        ]),
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([66.902, 48.714]),
            zoom: 5,
            minZoom: 5,
            extent: [5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296]
        })
    });

    // permalink
    var shouldUpdate = true;
    var view = map.getView();
    var updatePermalink = function () {
        if (!shouldUpdate) {
            // do not update the URL when the view was changed in the 'popstate' handler
            shouldUpdate = true;
            return;
        }
        var center = view.getCenter();
        var hash = '#map=' +
            view.getZoom() + '/' +
            Math.round(center[0] * 100) / 100 + '/' +
            Math.round(center[1] * 100) / 100 + '/' +
            view.getRotation();
        var state = {
            zoom: view.getZoom(),
            center: view.getCenter(),
            rotation: view.getRotation()
        };
        window.history.pushState(state, 'map', hash);
    };

    map.on('moveend', updatePermalink);

    window.addEventListener('popstate', function (event) {
        if (event.state === null) {
            return;
        }
        map.getView().setCenter(event.state.center);
        map.getView().setZoom(event.state.zoom);
        map.getView().setRotation(event.state.rotation);
        shouldUpdate = false;
    });

    function ToHome() {
        map.getView().fit([5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296], map.getSize());

        Layer_select_pasturepol.getSource().clear();
        if (Layer_admXpol_Navigate.getSource()) {
            Layer_admXpol_Navigate.getSource().clear();
        }
    };
</script>

@* ChangeLayers, ChangeArea, ChangeDisease *@
<script>
    function ChangeLayers() {
        map.getLayers().forEach(function (layer) {
            if (layer.get('name') == 'Base') {
                layer.setVisible(document.getElementById("layerBaseShow").checked);
                layer.setOpacity($('#layerBaseOpacity').val() / 100)
                if ($('#layerBaseType').val() == 'OSM') {
                    layer.setSource(Source_OSM);
                }
                else if ($('#layerBaseType').val() == 'BingAerialWithLabels') {
                    layer.setSource(Source_BingAerialWithLabels);
                }
                else if ($('#layerBaseType').val() == 'BingRoadStatic') {
                    layer.setSource(Source_BingRoadStatic);
                }
                else if ($('#layerBaseType').val() == 'BingRoadDynamic') {
                    layer.setSource(Source_BingRoadDynamic);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDay') {
                    layer.setSource(Source_HERENormalDay);
                }
                else if ($('#layerBaseType').val() == 'HERENormalDayTransit') {
                    layer.setSource(Source_HERENormalDayTransit);
                }
                else if ($('#layerBaseType').val() == 'HERETerrainDay') {
                    layer.setSource(Source_HERETerrainDay);
                }
                else if ($('#layerBaseType').val() == 'HEREHybridDay') {
                    layer.setSource(Source_HEREHybridDay);
                }
                else if ($('#layerBaseType').val() == 'StamenWatercolor') {
                    layer.setSource(Source_StamenWatercolor);
                }
                else if ($('#layerBaseType').val() == 'StamenTerrain') {
                    layer.setSource(Source_StamenTerrain);
                }
                else if ($('#layerBaseType').val() == 'StamenToner') {
                    layer.setSource(Source_StamenToner);
                }
                else if ($('#layerBaseType').val() == 'ArcGIS') {
                    layer.setSource(Source_ArcGIS);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOpenCycleMap') {
                    layer.setSource(Source_ThunderforestOpenCycleMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransport') {
                    layer.setSource(Source_ThunderforestTransport);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestLandscape') {
                    layer.setSource(Source_ThunderforestLandscape);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestOutdoors') {
                    layer.setSource(Source_ThunderforestOutdoors);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestTransportDark') {
                    layer.setSource(Source_ThunderforestTransportDark);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestSpinalMap') {
                    layer.setSource(Source_ThunderforestSpinalMap);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestPioneer') {
                    layer.setSource(Source_ThunderforestPioneer);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestMobileAtlas') {
                    layer.setSource(Source_ThunderforestMobileAtlas);
                }
                else if ($('#layerBaseType').val() == 'ThunderforestNeighbourhood') {
                    layer.setSource(Source_ThunderforestNeighbourhood);
                }
            }
            if (layer.get('name') == 'disease') {
                layer.setVisible(document.getElementById("layerdiseaseShow").checked);
                layer.setOpacity($('#layerdiseaseOpacity').val() / 100);
            }
            if (layer.get('name') == 'adm1pol') {
                layer.setVisible(document.getElementById("layeradm1polShow").checked);
                layer.setOpacity($('#layeradm1polOpacity').val() / 100);
            }
            if (layer.get('name') == 'adm2pol') {
                layer.setVisible(document.getElementById("layeradm2polShow").checked);
                layer.setOpacity($('#layeradm2polOpacity').val() / 100);
            }
            if (layer.get('name') == 'novokubanka') {
                layer.setVisible(document.getElementById("layernovokubankaShow").checked);
                layer.setOpacity($('#layernovokubankaOpacity').val() / 100);
            }
        })
    }

    function ChangeArea() {
        $.ajax({
            url: '@Url.Action("GetAreaLayers")',
            data: {
                Area: $('#area').val()
            },
            type: 'POST',
            success: function (data) {
                $('#disease').empty();
                $.each(data.layers, function () {
                    $('#disease').append($('<option />').val(this.code).text(this.name));
                });
                ChangeDisease();

                if ($('#area').val() == 'kz') {
                    map.getView().fit([5028944.964937042, 4754994.655562972, 10214432.963802021, 7494497.74930296], map.getSize());
                }
                else if ($('#area').val() == 'AB11') {
                    map.getView().fit([7250207.9, 6373808.4, 8291379.4, 7189861.7], map.getSize());
                }
                else if ($('#area').val() == 'AB39') {
                    map.getView().fit([6021884.8, 6105932.3, 8236524.6, 7336439.8], map.getSize());
                }
                else if ($('#area').val() == 'AB55') {
                    map.getView().fit([7750146.8, 6428384.8, 9278457.9, 7277551.4], map.getSize());
                }
                else if ($('#area').val() == 'AB59') {
                    map.getView().fit([7215381.3, 6822370.2, 8369133.2, 7463422.7], map.getSize());
                }
                else if ($('#area').val() == 'NK') {
                    map.getView().fit([7828946.3, 6696477.0, 7938667.7, 6757440.8], map.getSize());
                }
            },
            error: function () {
            }
        })
    }

    function ChangeDisease() {
        $.ajax({
            url: '@Url.Action("GetLayerYear")',
            data: {
                Layer: $('#disease').val()
            },
            type: 'POST',
            success: function (data) {
                $('#year').empty();
                $.each(data.years, function () {
                    $('#year').append($('<option />').val(this).text(this));
                });
                $('#year option:last').attr('selected', 'selected');
                ChangeYear();
            },
            error: function () {
            }
        })
    }

    function ChangeYear() {
        $.ajax({
            url: '@Url.Action("GetLayerYearDates")',
            data: {
                Area: $('#area').val(),
                Layer: $('#disease').val(),
                Year: $('#year').val()
            },
            type: 'POST',
            success: function (data) {
                $('#date').empty();
                $.each(data.dates, function () {
                    $('#date').append($('<option />').val(this.code).text(this.name));
                });
                $('#date option:last').attr('selected', 'selected');
                ChangeDate();
            },
            error: function () {
            }
        })
    }

    function ChangeDate() {
        var layerName = "";
        if ($('#area').val() == 'kz') {
            layerName = $('#disease').val();
        }
        else {
            layerName = $('#disease').val() + '_' +
                $('#area').val() + '_' +
                $('#year').val() + $('#date').val();
        }
        var Source_disease_new = new ol.source.TileWMS({
            url: 'http://' + geoserver_url + '/geoserver/Diseases/wms?',
            params: {
                'FORMAT': 'image/png',
                "LAYERS": 'Diseases:' + layerName,
            },
            serverType: 'geoserver'
        });
        Layer_disease.setSource(Source_disease_new);
        $('#infoTitle').text($('#area option:selected').text());
        $('#infoText').text($('#disease option:selected').text());
        var date = '';
        if ($('#date option:selected').text() != '') {
            date = $('#year option:selected').text() + '.' + $('#date option:selected').text();
        }
        $('#infoDate').text(date);
    }
</script>

@* Menu *@
<script>
    jQuery(document).ready(function () {
        /*
            Sidebar
        */
        $('.dismiss, .overlay').on('click', function () {
            $('.sidebar').removeClass('active');
            $('.overlay').removeClass('active');
        });

        $('.open-menu').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('active');
            // close opened sub-menus
            $('.collapse.show').toggleClass('show');
            $('a[aria-expanded=true]').attr('aria-expanded', 'false');
        });
        /* change sidebar style */
        $('a.btn-customized-dark').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').removeClass('light');
        });
        $('a.btn-customized-light').on('click', function (e) {
            e.preventDefault();
            $('.sidebar').addClass('light');
        });
    });
</script>

@*tooltips, modal windows*@
<script>
    $(document).ready(function () {
        ChangeArea();
        // Map Title
        new jBox('Modal', {
            id: 'modal-maptitle',
            attach: '#MapTitleBtn',
            width: 350,
            blockScroll: false,
            animation: 'flip',
            closeButton: false,
            position: {
                x: 'right',
                y: 'top'
            },
            offset: {
                x: -10,
                y: 70
            },
            content: '<div class="card-body text-white text-center p-0"><h4 class="card-title" id="infoTitle">Satellite</h5><p class="card-text mb-1" id="infoText">Dataset</p><p class="card-text" id="infoDate">YYYY. JDay: DD/MM - DD/MM</p></div >',
            overlay: false,
            repositionOnOpen: false
        }).open();
        // Map Legend
        new jBox('Modal', {
            attach: '#LegendBtn',
            id: 'modal-maptitle',
            minWidth: 100,
            zIndex: 'auto',
            closeButton: true,
            overlay: false,
            reload: 'strict',
            animation: 'flip',
            adjustPosition: false,
            closeButton: true,
            position: {
                x: 'right',
                y: 'bottom'
            },
            offset: {
                x: -10,
                y: -20
            },
            onOpen: function () {
                this.setContent('<div class="p-0"><img id="legend" class="card-img-top" src="C:\Users\Kaisar\source\repos\GeoServer\GeoServer\wwwroot\images\ETA-Modis.svg></div>');
            }
        }).open();
        // Tooltip below to the right
        new jBox('Tooltip', {
            theme: 'TooltipDark',
            zIndex: 'auto',
            attach: '.SomeInfo',
            getTitle: 'InfoTitle',
            content: '<div class="p-0"><p class="text-justify" style="width: 25rem;">Эвапотранспирация – физиологическое явление, связанное с поддержанием растением оптимальной температуры за счет испарения влаги с поверхности листа. Превышение оптимальных температур приводит к замедлению биохимических процессов в растительной клетке, разрушению (денатурации) белковых молекул и клеточных органелл и, в итоге, к увяданию растения. Пространственное распределение относительных значений эвапотранспирации предоставляет пользователю информацию о проблемных участках на отдельных полях или полях целиком, поскольку одной из причин снижения уровня эвапотранспирации является поражение листовых пластинок растений грибными заболеваниями.</p></div>',
            pointer: 'left:15',
        });

    });
</script>