
@{
    ViewData["Title"] = "Карта";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>
<h2>@*ViewModis*@</h2>

<style>
    .fullscreen:-moz-full-screen {
        height: 100%;
    }

    .fullscreen:-webkit-full-screen {
        height: 100%;
    }

    .fullscreen:-ms-fullscreen {
        height: 100%;
    }

    .fullscreen:fullscreen {
        height: 100%;
    }

    .fullscreen {
        margin-bottom: 10px;
        width: 100%;
        height: 800px;
    }

    .ol-rotate {
        top: 3em;
    }

    .map {
        width: 80%;
        height: 100%;
        float: left;
    }

    .sidepanel {
        background: rgba(247, 247, 247, 1);
        width: 20%;
        height: 100%;
        float: left;
    }

    .sidepanel-title {
        width: 100%;
        font-size: 3em;
        color: #ffffff;
        display: block;
        text-align: center;
    }
</style>

<div id="fullscreen" class="fullscreen">
    <div id="map" class="map"></div>
    <div class="sidepanel">
        @*<span class="sidepanel-title">Выбор</span>*@
        @*<label class="control-label">KATOType</label>
        @Html.DropDownList("KATOType", (IEnumerable<SelectListItem>)ViewBag.KATOType, htmlAttributes: new { @class = "form-control", @id = "KATOType", @onchange = "ChangeKATOType()" })

        <label class="control-label">ModisSource</label>
        @Html.DropDownList("ModisSource", (IEnumerable<SelectListItem>)ViewBag.ModisSource, htmlAttributes: new { @class = "form-control", @id = "ModisSource", @onchange = "ChangeModisSource()" })

        <label class="control-label">ModisProduct</label>
        @Html.DropDownList("ModisProduct", (IEnumerable<SelectListItem>)ViewBag.ModisProduct, htmlAttributes: new { @class = "form-control", @id = "ModisProduct", @onchange = "ChangeModisProduct()" })

        <label class="control-label">ModisDataSet</label>
        <select asp-items="ViewBag.ModisDataSet" name="ModisDataSet" class="form-control" id="ModisDataSet" onchange="ChangeModisDataSet()"></select>

        <label class="control-label">Year</label>
        <select asp-items="ViewBag.Year" name="Year" class="form-control" id="Year" onchange="ChangeYear()"></select>

        <label class="control-label">Date</label>
        <select name="Date" class="form-control" id="Date" onchange="ChangeDate()"></select>*@
        @{
            List<SelectListItem> DataType = new List<SelectListItem>()
            {
                new SelectListItem() { Text="Снег", Value="snow"},
                new SelectListItem() { Text="Спутниковые данные", Value="satellite", Selected = true}
            };

            List<SelectListItem> State = new List<SelectListItem>()
            {
                new SelectListItem() { Text="Фактическое", Value="Fact"},
                new SelectListItem() { Text="Аномальное", Value="Anomal"}
            };

            List<SelectListItem> Index = new List<SelectListItem>()
            {
                new SelectListItem() { Text="NDVI", Value="250m16daysNDVI"},
                new SelectListItem() { Text="EVI", Value="250m16daysEVI"}
            };
        }
        <label class="control-label">Тип данных</label>
        @Html.DropDownList("DataType", (IEnumerable<SelectListItem>)DataType, htmlAttributes: new { @class = "form-control", @id = "DataType", @onchange = "Change()" })

        <label class="control-label">Состояние</label>
        @Html.DropDownList("State", (IEnumerable<SelectListItem>)State, htmlAttributes: new { @class = "form-control", @id = "State", @onchange = "Change()" })

        <label class="control-label">Индекс</label>
        @Html.DropDownList("Index", (IEnumerable<SelectListItem>)Index, htmlAttributes: new { @class = "form-control", @id = "Index", @onchange = "Change()" })

        <label class="control-label">Год</label>
        <select asp-items="ViewBag.Year" name="Year" class="form-control" id="Year" onchange="ChangeYear()"></select>

        <label class="control-label">День</label>
        <select name="Date" class="form-control" id="Date" onchange="ChangeDate()"></select>

        <label class="control-label">Базовые слои</label><br>
            <input type="checkbox" class="KATO" name="KATO" value="KATO" onclick="Change()"> KATO<br>
                <input type="radio" class="KATOLevel" name="KATO" value="adm1pol" onclick="Change()"> Области<br>
                <input type="radio" class="KATOLevel" name="KATO" value="adm2pol" onclick="Change()" checked="checked"> Районы<br>
                <input type="radio" class="KATOLevel" name="KATO" value="adm3pol" onclick="Change()"> Сельские округи<br>
            <input type="checkbox" class="Pastures" name="Pastures" value="Pastures" onclick="Change()" checked="checked"> Пастбища<br>
                <input type="radio" class="PasturesType" name="Pastures" value="pastALAColor" onclick="Change()"> С окрасом<br>
                <input type="radio" class="PasturesType" name="Pastures" value="pastALA" onclick="Change()" checked="checked"> Без окраса<br>
    </div>
</div>

<div id="dialog" title="Пастбище" hidden="hidden">
    <table class="table">
        <tr>
            <td>Класс</td>
            <td id="pas_class_id"></td>
        </tr>
        <tr>
            <td>Отдел</td>
            <td id="pas_otdely_id"></td>
        </tr>
        <tr>
            <td>Подтип</td>
            <td id="pas_subtype_id"></td>
        </tr>
        <tr>
            <td>Группа</td>
            <td id="pas_group_id"></td>
        </tr>
        <tr>
            <td>Урожайность весна, ц/га</td>
            <td id="pas_ur_v"></td>
        </tr>
        <tr>
            <td>Урожайность лето, ц/га</td>
            <td id="pas_ur_l"></td>
        </tr>
        <tr>
            <td>Урожайность осень, ц/га</td>
            <td id="pas_ur_o"></td>
        </tr>
        <tr>
            <td>Урожайность зима, ц/га</td>
            <td id="pas_ur_z"></td>
        </tr>
        <tr>
            <td>Кормовая единица весна, ц/га</td>
            <td id="pas_korm_v"></td>
        </tr>
        <tr>
            <td>Кормовая единица, лето, ц/га</td>
            <td id="pas_korm_l"></td>
        </tr>
        <tr>
            <td>Кормовая единица, осень, ц/га</td>
            <td id="pas_korm_o"></td>
        </tr>
        <tr>
            <td>Кормовая единица, зима, ц/га</td>
            <td id="pas_korm_z"></td>
        </tr>
    </table>
    <br />
</div>


<script type="text/javascript">
    var layers = [];
    layers.push(new ol.layer.Tile({
        source: new ol.source.OSM()
    }));
    layers[0].set('name', 'OSM');

    var geoserverPort = '8080',
        geoserverAddress = '@ViewBag.GeoserverAddress';//window.location.hostname;

    var Source_Modis = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:No',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_Modis = new ol.layer.Tile({
        source: Source_Modis
    });
    Layer_Modis.setOpacity(0.80);
    layers.push(Layer_Modis);

    var Source_KATO = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:no',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_KATO = new ol.layer.Tile({
        source: Source_KATO
    });
    Layer_KATO.setOpacity(0.80);
    layers.push(Layer_KATO);

    var Source_Pastures = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:pastALA',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_Pastures = new ol.layer.Tile({
        source: Source_Pastures
    });
    Layer_Pastures.setOpacity(0.80);
    layers.push(Layer_Pastures);

    var source = new ol.source.Vector();
    var layer = new ol.layer.Vector({
        source: source
    });

    var map = new ol.Map({
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([78.5, 45]),
            zoom: 7,
            //maxZoom: ...,
            minZoom: 7,
            extent: [7991617, 5172524, 9408704, 6016344]
            //extent: ol.proj.transform([74, 42, 83, 48], 'EPSG:4326', 'EPSG:3857')

        })
    });

    function Change() {
        var year = $('#Year').val();
        var day = $('#Date').val();
        if (day.length < 3) day = '0' + day;
        if (day.length < 3) day = '0' + day;
        var layer_Modis = '';

        map.getLayers().getArray()[1].setVisible(1);

        if ($('#DataType').val() === 'snow') {
            map.getLayers().getArray()[1].setVisible(0);
        }
        else if ($('#DataType').val() === 'satellite') {
            if ($('#State').val() === 'Fact') {
                layer_Modis = "MOLT";
                layer_Modis += '_' + "MOD13Q1";
                layer_Modis += '_A' + [year, day].join('');
                layer_Modis += '_' + $("#Index").val();
                var Source_New = new ol.source.TileWMS({
                    url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                    params: {
                        'LAYERS': 'GeoServer:' + layer_Modis,
                        'VERSION': '1.1.0',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                });
                var l = map.getLayers().getArray()[1];
                l.setSource(Source_New);
            }
            else if ($('#State').val() === 'Anomal') {
                layer_Modis = "MOLT";
                layer_Modis += '_' + "MOD13Q1";
                layer_Modis += '_A' + [year, day].join('');
                layer_Modis += '_' + $("#Index").val();
                layer_Modis += '_' + "AN";
                var Source_New = new ol.source.TileWMS({
                    url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                    params: {
                        'LAYERS': 'GeoServer:' + layer_Modis,
                        'VERSION': '1.1.0',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                });
                var l = map.getLayers().getArray()[1];
                l.setSource(Source_New);
            }
        }

        if ($('.KATO:checked').val() === 'KATO') {
            var KATOLayer = 'adm2pol';
            if ($('.KATOLevel:checked').val() === 'adm1pol') {
                KATOLayer = 'adm1pol';
            }
            if ($('.KATOLevel:checked').val() === 'adm3pol') {
                KATOLayer = 'adm3pol';
            }
            var Source_New = new ol.source.TileWMS({
                url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                params: {
                    'LAYERS': 'GeoServer:' + KATOLayer,
                    'VERSION': '1.1.0',
                    'FORMAT': 'image/png',
                    'TILED': true
                },
                serverType: 'geoserver'
            });
            var l = map.getLayers().getArray()[2];
            l.setSource(Source_New);
            map.getLayers().getArray()[2].setVisible(1);
        }
        else {
            map.getLayers().getArray()[2].setVisible(0);
        }

        if ($('.Pastures:checked').val() === 'Pastures') {
            var PasturesLayer = 'pastALA';
            if ($('.PasturesType:checked').val() === 'pastALAColor') {
                PasturesLayer = 'pastALAColor';
            }
            var Source_New = new ol.source.TileWMS({
                url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                params: {
                    'LAYERS': 'GeoServer:' + PasturesLayer,
                    'VERSION': '1.1.0',
                    'FORMAT': 'image/png',
                    'TILED': true
                },
                serverType: 'geoserver'
            });
            var l = map.getLayers().getArray()[3];
            l.setSource(Source_New);
            map.getLayers().getArray()[3].setVisible(1);
        }
        else {
            map.getLayers().getArray()[3].setVisible(0);
        }
    }

    Change();
</script>

<script>
    function ChangeModisSource() {
        $.ajax({
            url: '@Url.Action("GetModisProductByModisSource", "GDAL")',
            data: { ModisSource: $('#ModisSource').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data, function (i) {
                    optionhtml += '<option value="' + data[i]['name'] + '"' +
                        (data[i]['name'] == $('#ModisProduct').val() ? 'selected' : '') +
                        '>' + data[i]['name'] +
                        '</option>';
                });
                $("#ModisProduct").empty();
                $('#ModisProduct').append(optionhtml);
                ChangeModisProduct();
            },
            error: function () {
            }
        });
    };

    function ChangeModisProduct() {
        $.ajax({
            url: '@Url.Action("GetModisDataSets", "GDAL")',
            data: { ModisProduct: $('#ModisProduct').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data, function (i) {
                    optionhtml += '<option value="' + data[i]['name'] + '"' +
                        (data[i]['indexName'] == $('#File').val() ? 'selected' : '') +
                        '>' + data[i]['indexName'] +
                        '</option>';
                });
                $("#ModisDataSet").empty();
                $('#ModisDataSet').append(optionhtml);
                ChangeModis();
            },
            error: function () {
            }
        });
    };

    function ChangeYear() {
        $.ajax({
            url: '@Url.Action("GetYearDates")',
            data: { Year: $('#Year').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data.dates, function (i) {
                    optionhtml += '<option value="' + data.dates[i]['value'] + '"' +
                        //(data[i]['text'] == $('#File').val() ? 'selected' : '') +
                        '>' + data.dates[i]['text'] +
                        '</option>';
                });
                $("#Date").empty();
                $('#Date').append(optionhtml);
                Change();
            },
            error: function () {
            }
        });
    };

    function ChangeModisDataSet() {
        ChangeModis();
    };

    function ChangeDate() {
        Change();
    };

    function ChangeModis() {
        //var d = new Date($('#Date').val());

        //var start = new Date(d.getFullYear(), 0, 0);
        //var diff = d - start;
        //var oneDay = 1000 * 60 * 60 * 24;
        //var day = Math.floor(diff / oneDay).toString();

        //var year = d.getFullYear();

        var year = $('#Year').val();
        var day = $('#Date').val();

        if (day.length < 3) day = '0' + day;
        if (day.length < 3) day = '0' + day;

        var layer_Modis = $('#ModisSource').val();
        layer_Modis += '_' + $('#ModisProduct').val();
        layer_Modis += '_A' + [year, day].join('');
        layer_Modis += '_' + $("#ModisDataSet").val();

        var Source_New = new ol.source.TileWMS({
            url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
            params: {
                'LAYERS': 'GeoServer:' + layer_Modis,
                'VERSION': '1.1.0',
                'FORMAT': 'image/png',
                'TILED': true
            },
            serverType: 'geoserver'
        });
        var l = map.getLayers().getArray()[1];
        l.setSource(Source_New);
    }

    function ChangeKATOType() {
        var Source_New = new ol.source.TileWMS({
            url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
            params: {
                'LAYERS': 'GeoServer:' + $("#KATOType").val(),
                'VERSION': '1.1.0',
                'FORMAT': 'image/png',
                'TILED': true
            },
            serverType: 'geoserver'
        });
        var l = map.getLayers().getArray()[2];
        l.setSource(Source_New);
    }

    $(document).ready(function () {
        ChangeYear();
    });
</script>

<script src="~/lib/chart.js/Chart.js"></script>

<script>
    var myLineChart = null;
    map.on('singleclick', function (evt) {
        var viewResolution = (map.getView().getResolution());
        var url = layers[2].getSource().getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {
                'INFO_FORMAT': 'text/javascript'
                //'FEATURE_COUNT': '10000'
            });
        if (url) {
            var parser = new ol.format.GeoJSON();
            $.ajax({
                url: url,
                dataType: 'jsonp',
                jsonpCallback: 'parseResponse',
                error: function (xhr, status, error) {
                    //alert(err.Message);
                }
            }).then(function (response) {
                var result = parser.readFeatures(response);
                if (result.length > 0) {
                    // chart
                    if ($("#KATOType").val() !== 'pastALA') {
                        var url = '@Url.Action("ViewModisChart")' +
                            '?KATOType=' + $("#KATOType").val() +
                            '&PastId=' +
                            '&KATO=' + result[0].get('kato_te') +
                            "&Year=" + $('#Year').val() +
                            "&ModisSource=" + $('#ModisSource').val() +
                            "&ModisProduct=" + $('#ModisProduct').val() +
                            "&ModisDataSet=" + $('#ModisDataSet').val();
                        window.open(url, "MsgWindow", "width=500,height=400");
                    }
                    else {
                        var url = '@Url.Action("ViewModisChart")' +
                            '?KATOType=' + $("#KATOType").val() +
                            '&PastId=' + result[0].get('id') +
                            '&KATO=' +
                            "&Year=" + $('#Year').val() +
                            "&ModisSource=" + $('#ModisSource').val() +
                            "&ModisProduct=" + $('#ModisProduct').val() +
                            "&ModisDataSet=" + $('#ModisDataSet').val();

                        window.open(url, "MsgWindow", "width=500,height=400");
                    }
                    // pastures info
                    if ($("#KATOType").val() === 'pastALA') {
                        $.ajax({
                            url: '@Url.Action("GetPasInfo")',
                            data: {
                                class_id: result[0].get('class_id'),
                                otdely_id: result[0].get('otdely_id'),
                                subtype_id: result[0].get('subtype_id'),
                                group_id: result[0].get('group_id'),
                                recom_id: result[0].get('recom_id')
                            },
                            type: 'POST',
                            success: function (data) {
                                $('#pas_class_id').html(data.class_name);
                                $('#pas_otdely_id').html(data.otdely_name);
                                $('#pas_subtype_id').html(data.subtype_name);
                                $('#pas_group_id').html(data.group_name);
                                $('#pas_recom_id').html(data.recom_name);

                                $('#pas_ur_v').html(result[0].get('ur_v'));
                                $('#pas_ur_l').html(result[0].get('ur_l'));
                                $('#pas_ur_o').html(result[0].get('ur_o'));
                                $('#pas_ur_z').html(result[0].get('ur_z'));
                                $('#pas_korm_v').html(result[0].get('korm_v'));
                                $('#pas_korm_l').html(result[0].get('korm_l'));
                                $('#pas_korm_o').html(result[0].get('korm_o'));
                                $('#pas_korm_z').html(result[0].get('korm_z'));

                                $("#dialog").dialog({
                                    width: 700,
                                    height: 500
                                });
                            },
                            error: function () {
                            }
                        });
                    }
                }
            });
        }
    });


</script>