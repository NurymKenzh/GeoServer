
@{
    ViewData["Title"] = "Карта";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>

@*<script src="~/js/loadingoverlay.js"></script>*@
<h2>@*ViewModis*@</h2>

<style>
    .fullscreen:-moz-full-screen {
        height: 100%;
    }

    .fullscreen:-webkit-full-screen {
        height: 100%;
    }

    .fullscreen:-ms-fullscreen {
        height: 100%;
    }

    .fullscreen:fullscreen {
        height: 100%;
    }

    .fullscreen {
        margin-bottom: 10px;
        width: 100%;
        height: 900px;
    }

    .ol-rotate {
        top: 3em;
    }

    .map {
        width: 80%;
        height: 100%;
        float: left;
    }

    .sidepanel {
        background: rgba(247, 247, 247, 1);
        width: 20%;
        height: 100%;
        float: left;
        position: relative;
    }

    .sidepanel-title {
        width: 100%;
        font-size: 3em;
        color: #ffffff;
        display: block;
        text-align: center;
    }

    #click {
        height: 25px;
        width: 25px;
        background-color: gray;
        /*float: left;*/
        position: absolute;
        right: 0px;
        z-index: 5;
    }
</style>

<div id="fullscreen" class="fullscreen">
    <div id="map" class="map"></div>
    <div id='click'>>></div>
    <div id="sidepanel" class="sidepanel" style="padding:15px;">
        @{
            List<SelectListItem> DataType = new List<SelectListItem>()
            {
                new SelectListItem() { Text="Снег", Value="snow"},
                new SelectListItem() { Text="Вегетационные данные", Value="vegetation", Selected = true}
            };

            List<SelectListItem> State = new List<SelectListItem>()
            {
                new SelectListItem() { Text="Фактическое", Value="Fact"},
                new SelectListItem() { Text="Аномальное", Value="Anomal"}
            };

            List<SelectListItem> Index = new List<SelectListItem>()
            {
                new SelectListItem() { Text="NDVI", Value="250m16daysNDVI"},
                new SelectListItem() { Text="EVI", Value="250m16daysEVI"}
            };
        }
        <label class="control-label">Тип данных</label>
        @Html.DropDownList("DataType", (IEnumerable<SelectListItem>)DataType, htmlAttributes: new { @class = "form-control", @id = "DataType", @onchange = "Change()" })

        <label class="control-label">Состояние</label>
        @Html.DropDownList("State", (IEnumerable<SelectListItem>)State, htmlAttributes: new { @class = "form-control", @id = "State", @onchange = "Change()" })

        <label class="control-label">Индекс</label>
        @Html.DropDownList("Index", (IEnumerable<SelectListItem>)Index, htmlAttributes: new { @class = "form-control", @id = "Index", @onchange = "Change()" })

        <label class="control-label">Год</label>
        <select asp-items="ViewBag.Year" name="Year" class="form-control" id="Year" onchange="ChangeYear()"></select>

        <label class="control-label">День</label>
        <select name="Date" class="form-control" id="Date" onchange="ChangeDate()"></select>
        <input id="opacity1" type="range" min="0" max="100" value="80" onchange="Opacity(1)" />

        <br>
        <label class="control-label">Тематические слои</label><br>
        <input type="checkbox" class="KATO" name="KATO" value="KATO" onclick="Change()"> Административно-территориальное деление<br>
        <input type="radio" class="KATOLevel" name="KATO" value="adm1pol" onclick="Change()"> Области<br>
        <input type="radio" class="KATOLevel" name="KATO" value="adm2pol" onclick="Change()" checked="checked"> Районы<br>
        <input type="radio" class="KATOLevel" name="KATO" value="adm3pol" onclick="Change()"> Сельские округи<br>
        <input type="radio" class="KATOLevel" name="KATO" value="Pastures" onclick="Change()"> Пастбищные выделы<br>
        <input type="radio" id="withColor" class="PasturesType" name="Pastures" value="pastALAColor" onclick="Change()" disabled="disabled" style="margin-left:20px"> С окрасом
        <input type="button" id="legend" value="Легенда" onclick="PasLagend()" disabled="disabled" />
        <br>
        <input type="radio" id="withoutColor" class="PasturesType" name="Pastures" value="pastALA" onclick="Change()" disabled="disabled" style="margin-left:20px"> Без окраса<br>
        <input id="opacity2" type="range" min="0" max="100" value="80" onchange="Opacity(2)" />
        <br />
        <input type="checkbox" class="Acreage" name="Acreage" value="Acreage" onclick="Change()"> Посевные площади<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskAll" onclick="Change()" checked="checked"> Все<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskWheat" onclick="Change()"> Пшеница<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskCorn" onclick="Change()"> Кукуруза<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskRice" onclick="Change()"> Рис<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskDeposit" onclick="Change()"> Залежь<br>
        <input type="radio" class="AcreageLevel" name="Acreage" value="CropMaskSteam" onclick="Change()"> Паровые поля<br>
        <input id="opacity3" type="range" min="0" max="100" value="80" onchange="Opacity(3)" />
        <br />
        <label class="control-label">Топографические слои</label><br>
        <input type="checkbox" class="TopographyLabel" name="TopographyLabel" value="TopographyLabel" onclick="Change()"> <i>Подписи</i><br>
        <input type="checkbox" class="hdrlin" name="hdrlin" value="hdrlin" onclick="Change()"> Реки<br>
        <input type="checkbox" class="hdrpol" name="hdrpol" value="hdrpol" onclick="Change()"> Озера<br>
        <input type="checkbox" class="poppnt" name="poppnt" value="poppnt" onclick="Change()"> Населенные пункты<br>
        <input type="checkbox" class="rdslin" name="rdslin" value="rdslin" onclick="Change()"> Дороги<br>
        <input id="opacity4" type="range" min="0" max="100" value="80" onchange="Opacity(4)" />
        <br />
        <input type="checkbox" class="ALTD" name="ALTD" value="ALTD" onclick="Change()"> Среднемноголетние данные<br>
        <input type="radio" class="ALTDLevel" name="ALTD" value="data1" onclick="Change()"> Деградированные земли<br>
        <input type="radio" class="ALTDLevel" name="ALTD" value="data2" onclick="Change()"> Засоленные земли<br>
        <input type="radio" class="ALTDLevel" name="ALTD" value="data3" onclick="Change()"> Антропогенные земли<br>
        <input id="opacity4" type="range" min="0" max="100" value="80" onchange="Opacity(5)" />
        <br />
        <input type="button" id="info1" value="Информация 1" onclick="ViewChart1()" disabled="disabled" />
        <br />
        <input type="button" id="info2" value="Информация 2" onclick="ViewChart2()" disabled="disabled" />
    </div>
</div>

<div id="dialog" title="Пастбище" hidden="hidden">
    <table class="table">
        <tr>
            <td>Класс</td>
            <td id="pas_class_id"></td>
        </tr>
        <tr>
            <td>Отдел</td>
            <td id="pas_otdely_id"></td>
        </tr>
        <tr>
            <td>Подтип</td>
            <td id="pas_subtype_id"></td>
        </tr>
        <tr>
            <td>Группа</td>
            <td id="pas_group_id"></td>
        </tr>
        <tr>
            <td>Урожайность весна, ц/га</td>
            <td id="pas_ur_v"></td>
        </tr>
        <tr>
            <td>Урожайность лето, ц/га</td>
            <td id="pas_ur_l"></td>
        </tr>
        <tr>
            <td>Урожайность осень, ц/га</td>
            <td id="pas_ur_o"></td>
        </tr>
        <tr>
            <td>Урожайность зима, ц/га</td>
            <td id="pas_ur_z"></td>
        </tr>
        <tr>
            <td>Кормовая единица весна, ц/га</td>
            <td id="pas_korm_v"></td>
        </tr>
        <tr>
            <td>Кормовая единица, лето, ц/га</td>
            <td id="pas_korm_l"></td>
        </tr>
        <tr>
            <td>Кормовая единица, осень, ц/га</td>
            <td id="pas_korm_o"></td>
        </tr>
        <tr>
            <td>Кормовая единица, зима, ц/га</td>
            <td id="pas_korm_z"></td>
        </tr>
    </table>
    <br />
</div>

<div id="paslegenddialog" title="Легенда" hidden="hidden">
    <img src="~/images/pastlegend.jpg" style="width: 630px;" />
</div>


<script type="text/javascript">
    //$("#fullscreen").LoadingOverlay("show");

    var layers = [];
    layers.push(new ol.layer.Tile({
        source: new ol.source.OSM()
    }));
    layers[0].set('name', 'OSM');

    var geoserverPort = '8080',
        geoserverAddress = '@ViewBag.GeoserverAddress';//window.location.hostname;

    var Source_Modis = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:No',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_Modis = new ol.layer.Tile({
        source: Source_Modis
    });
    Layer_Modis.setOpacity(0.80);
    layers.push(Layer_Modis);

    var Source_KATO = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:no',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_KATO = new ol.layer.Tile({
        source: Source_KATO
    });
    Layer_KATO.setOpacity(0.80);
    layers.push(Layer_KATO);

    // источник данных и слой pasturepol
    var Source_pasturepol = new ol.source.ImageWMS({
        url: 'http://' + geoserverAddress + ':8080/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:pastALA',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            //'TILED': false
        },
        serverType: 'geoserver'
    });
    var Layer_pasturepol =
        new ol.layer.Image({
            source: Source_pasturepol
        });

    // векторный слой пастбищ (не отображается на карте)
    var Layer_pasturepol_v = new ol.layer.Vector();
    // векторный слой областей (не отображается на карте)
    var Layer_adm1pol_v = new ol.layer.Vector();
    // векторный слой районов (не отображается на карте)
    var Layer_adm2pol_v = new ol.layer.Vector();
    // векторный слой сельских округов (не отображается на карте)
    var Layer_adm3pol_v = new ol.layer.Vector();
    // векторный слой пастбищ
    var url_pasturepol_v = "http://" + geoserverAddress + ":8080/geoserver/GeoServer/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoServer:pastALA&outputFormat=text/javascript&format_options=callback:getJson";
    $.ajax({
        jsonp: false,
        jsonpCallback: 'getJson',
        type: 'GET',
        url: url_pasturepol_v,
        async: false,
        dataType: 'jsonp',
        success: function (data_pasturepol_v) {
            Layer_pasturepol_v = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: (new ol.format.GeoJSON()).readFeatures(data_pasturepol_v, {
                        featureProjection: 'EPSG:3857'
                    })
                })
            });
            // векторный слой областей
            var url_adm1pol_v = "http://" + geoserverAddress + ":8080/geoserver/GeoServer/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoServer:adm1pol&outputFormat=text/javascript&format_options=callback:getJson";
            $.ajax({
                jsonp: false,
                jsonpCallback: 'getJson',
                type: 'GET',
                url: url_adm1pol_v,
                async: false,
                dataType: 'jsonp',
                success: function (data_adm1pol_v) {
                    Layer_adm1pol_v = new ol.layer.Vector({
                        source: new ol.source.Vector({
                            features: (new ol.format.GeoJSON()).readFeatures(data_adm1pol_v, {
                                featureProjection: 'EPSG:3857'
                            })
                        })
                    });
                    // векторный слой районов
                    var url_adm2pol_v = "http://" + geoserverAddress + ":8080/geoserver/GeoServer/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoServer:adm2pol&outputFormat=text/javascript&format_options=callback:getJson";
                    $.ajax({
                        jsonp: false,
                        jsonpCallback: 'getJson',
                        type: 'GET',
                        url: url_adm2pol_v,
                        async: false,
                        dataType: 'jsonp',
                        success: function (data_adm2pol_v) {
                            Layer_adm2pol_v = new ol.layer.Vector({
                                source: new ol.source.Vector({
                                    features: (new ol.format.GeoJSON()).readFeatures(data_adm2pol_v, {
                                        featureProjection: 'EPSG:3857'
                                    })
                                })
                            });
                            // векторный слой сельских округов
                            var url_adm3pol_v = "http://" + geoserverAddress + ":8080/geoserver/GeoServer/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoServer:adm3pol&outputFormat=text/javascript&format_options=callback:getJson";
                            $.ajax({
                                jsonp: false,
                                jsonpCallback: 'getJson',
                                type: 'GET',
                                url: url_adm3pol_v,
                                async: false,
                                dataType: 'jsonp',
                                success: function (data_adm3pol_v) {
                                    Layer_adm3pol_v = new ol.layer.Vector({
                                        source: new ol.source.Vector({
                                            features: (new ol.format.GeoJSON()).readFeatures(data_adm3pol_v, {
                                                featureProjection: 'EPSG:3857'
                                            })
                                        })
                                    });
                                    //$("#fullscreen").LoadingOverlay("hide");
                                }
                            });
                        }
                    });
                }
            });
        }
    });

    // источник данных и слой CropMask
    var Source_CropMask = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:no',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_CropMask = new ol.layer.Tile({
        source: Source_CropMask
    });
    Layer_CropMask.setOpacity(0.80);
    layers.push(Layer_CropMask);

    // источник данных и слой hdrlin
    var Source_hdrlin = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:hdrlin',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_hdrlin = new ol.layer.Tile({
        source: Source_hdrlin
    });
    Layer_hdrlin.setOpacity(0.80);
    layers.push(Layer_hdrlin);

    // источник данных и слой hdrpol
    var Source_hdrpol = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:hdrpol',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_hdrpol = new ol.layer.Tile({
        source: Source_hdrpol
    });
    Layer_hdrpol.setOpacity(0.80);
    layers.push(Layer_hdrpol);

    // источник данных и слой poppnt
    var Source_poppnt = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:poppnt',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_poppnt = new ol.layer.Tile({
        source: Source_poppnt
    });
    Layer_poppnt.setOpacity(0.80);
    layers.push(Layer_poppnt);

    // источник данных и слой poppntl
    var Source_poppntl = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:poppntl',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_poppntl = new ol.layer.Tile({
        source: Source_poppntl
    });
    Layer_poppntl.setOpacity(0.80);
    layers.push(Layer_poppntl);

    // источник данных и слой poppol
    var Source_poppol = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:poppol',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_poppol = new ol.layer.Tile({
        source: Source_poppol
    });
    Layer_poppol.setOpacity(0.80);
    layers.push(Layer_poppol);

    // источник данных и слой poppoll
    var Source_poppoll = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:poppoll',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_poppoll = new ol.layer.Tile({
        source: Source_poppoll
    });
    Layer_poppoll.setOpacity(0.80);
    layers.push(Layer_poppoll);

    // источник данных и слой rdslin
    var Source_rdslin = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
        params: {
            'LAYERS': 'GeoServer:rdslin',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_rdslin = new ol.layer.Tile({
        source: Source_rdslin
    });
    Layer_rdslin.setOpacity(0.80);
    layers.push(Layer_rdslin);

    // векторный слой выбранных пастбищ
    var Source_select_pasturepol = new ol.source.Vector({});
    var Layer_select_pasturepol = new ol.layer.Vector({
        source: Source_select_pasturepol,
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: [0, 0, 255, 1]
            }),
            stroke: new ol.style.Stroke({
                color: 'red',
                width: 2
            })
        })
    });
    // N
    layers.push(Layer_select_pasturepol);

    var source = new ol.source.Vector();
    var layer = new ol.layer.Vector({
        source: source
    });

    var map = new ol.Map({
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([78.5, 45]),
            zoom: 7,
            //maxZoom: ...,
            minZoom: 7,
            extent: [7991617, 5172524, 9408704, 6016344]
            //extent: ol.proj.transform([74, 42, 83, 48], 'EPSG:4326', 'EPSG:3857')

        })
    });

    function Change() {
        var year = $('#Year').val();
        var day = $('#Date').val();
        if (day.length < 3) day = '0' + day;
        if (day.length < 3) day = '0' + day;
        var layer_Modis = '';

        map.getLayers().getArray()[1].setVisible(1);

        if ($('#DataType').val() === 'snow') {
            map.getLayers().getArray()[1].setVisible(0);
        }
        else if ($('#DataType').val() === 'vegetation') {
            if ($('#State').val() === 'Fact') {
                layer_Modis = "MOLT";
                layer_Modis += '_' + "MOD13Q1";
                layer_Modis += '_A' + [year, day].join('');
                layer_Modis += '_' + $("#Index").val();
                var Source_New = new ol.source.TileWMS({
                    url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                    params: {
                        'LAYERS': 'GeoServer:' + layer_Modis,
                        'VERSION': '1.1.0',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                });
                var l = map.getLayers().getArray()[1];
                l.setSource(Source_New);
            }
            else if ($('#State').val() === 'Anomal') {
                layer_Modis = "MOLT";
                layer_Modis += '_' + "MOD13Q1";
                layer_Modis += '_A' + [year, day].join('');
                layer_Modis += '_' + $("#Index").val();
                layer_Modis += '_' + "AN";
                var Source_New = new ol.source.TileWMS({
                    url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                    params: {
                        'LAYERS': 'GeoServer:' + layer_Modis,
                        'VERSION': '1.1.0',
                        'FORMAT': 'image/png',
                        'TILED': true
                    },
                    serverType: 'geoserver'
                });
                var l = map.getLayers().getArray()[1];
                l.setSource(Source_New);
            }
        }

        if ($('.KATO:checked').val() === 'KATO') {
            var withoutColor = document.getElementById("withoutColor");
            var withColor = document.getElementById("withColor");
            var legend = document.getElementById("legend");
            var KATOLayer = 'adm2pol';
            if ($('.KATOLevel:checked').val() === 'adm1pol') {
                KATOLayer = 'adm1pol';
            }
            if ($('.KATOLevel:checked').val() === 'adm3pol') {
                KATOLayer = 'adm3pol';
            }
            if ($('.KATOLevel:checked').val() === 'Pastures') {
                withoutColor.disabled = false;
                if (withColor.checked) {
                    withoutColor.checked = false;
                }
                else {
                    withoutColor.checked = true;
                }
                withColor.disabled = false;
                legend.disabled = false;
                $('#legend').addClass('btn btn-default');
                KATOLayer = 'pastALA';
                if ($('.PasturesType:checked').val() === 'pastALAColor') {
                    withoutColor.checked = false;
                    withColor.checked = true;
                    KATOLayer = 'pastALAColor';
                }
            }
            else {
                withoutColor.disabled = true;
                if (withoutColor.checked) {
                    withoutColor.checked = false;
                }
                else {
                    withColor.checked = false;
                }
                withColor.disabled = true;
                legend.disabled = true;
                $('#legend').removeClass('btn btn-default');
            }
            var Source_New = new ol.source.TileWMS({
                url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                params: {
                    'LAYERS': 'GeoServer:' + KATOLayer,
                    'VERSION': '1.1.0',
                    'FORMAT': 'image/png',
                    'TILED': true
                },
                serverType: 'geoserver'
            });
            var l = map.getLayers().getArray()[2];
            l.setSource(Source_New);
            map.getLayers().getArray()[2].setVisible(1);
        }
        else {
            map.getLayers().getArray()[2].setVisible(0);

            document.getElementById("withoutColor").disabled = true;
            if (document.getElementById("withoutColor").checked) {
                document.getElementById("withoutColor").checked = false;
            }
            else {
                document.getElementById("withColor").checked = false;
            }
            document.getElementById("withColor").disabled = true;
            document.getElementById("legend").disabled = true;
            $('#legend').removeClass('btn btn-default');
        }

        if ($('.Acreage:checked').val() === 'Acreage') {
            var AcreageLayer = 'CropMaskAll';
            if ($('.AcreageLevel:checked').val() === 'CropMaskWheat') {
                AcreageLayer = 'CropMaskWheat';
            }
            if ($('.AcreageLevel:checked').val() === 'CropMaskCorn') {
                AcreageLayer = 'CropMaskCorn';
            }
            if ($('.AcreageLevel:checked').val() === 'CropMaskRice') {
                AcreageLayer = 'CropMaskRice';
            }
            if ($('.AcreageLevel:checked').val() === 'CropMaskDeposit') {
                AcreageLayer = 'CropMaskDeposit';
            }
            if ($('.AcreageLevel:checked').val() === 'CropMaskSteam') {
                AcreageLayer = 'CropMaskSteam';
            }
            var Source_New = new ol.source.TileWMS({
                url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
                params: {
                    'LAYERS': 'GeoServer:' + AcreageLayer,
                    'VERSION': '1.1.0',
                    'FORMAT': 'image/png',
                    'TILED': true
                },
                serverType: 'geoserver'
            });
            var l = map.getLayers().getArray()[3];
            l.setSource(Source_New);
            map.getLayers().getArray()[3].setVisible(1);
        }
        else {
            map.getLayers().getArray()[3].setVisible(0);
        }

        if ($('.hdrlin:checked').val() === 'hdrlin') {
            map.getLayers().getArray()[4].setVisible(1);
        }
        else {
            map.getLayers().getArray()[4].setVisible(0);
        }
        if ($('.hdrpol:checked').val() === 'hdrpol') {
            map.getLayers().getArray()[5].setVisible(1);
        }
        else {
            map.getLayers().getArray()[5].setVisible(0);
        }
        if ($('.poppnt:checked').val() === 'poppnt') {
            if ($('.TopographyLabel:checked').val() === 'TopographyLabel') {
                map.getLayers().getArray()[7].setVisible(1);
                map.getLayers().getArray()[6].setVisible(0);
                map.getLayers().getArray()[9].setVisible(1);
                map.getLayers().getArray()[8].setVisible(0);
            }
            else {
                map.getLayers().getArray()[7].setVisible(0);
                map.getLayers().getArray()[6].setVisible(1);
                map.getLayers().getArray()[9].setVisible(0);
                map.getLayers().getArray()[8].setVisible(1);
            }
        }
        else {
            map.getLayers().getArray()[7].setVisible(0);
            map.getLayers().getArray()[6].setVisible(0);
            map.getLayers().getArray()[9].setVisible(0);
            map.getLayers().getArray()[8].setVisible(0);
        }
        if ($('.rdslin:checked').val() === 'rdslin') {
            map.getLayers().getArray()[10].setVisible(1);
        }
        else {
            map.getLayers().getArray()[10].setVisible(0);
        }
    }

    Change();

    
</script>

<script>
    function ChangeModisSource() {
        $.ajax({
            url: '@Url.Action("GetModisProductByModisSource", "GDAL")',
            data: { ModisSource: $('#ModisSource').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data, function (i) {
                    optionhtml += '<option value="' + data[i]['name'] + '"' +
                        (data[i]['name'] == $('#ModisProduct').val() ? 'selected' : '') +
                        '>' + data[i]['name'] +
                        '</option>';
                });
                $("#ModisProduct").empty();
                $('#ModisProduct').append(optionhtml);
                ChangeModisProduct();
            },
            error: function () {
            }
        });
    };

    function ChangeModisProduct() {
        $.ajax({
            url: '@Url.Action("GetModisDataSets", "GDAL")',
            data: { ModisProduct: $('#ModisProduct').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data, function (i) {
                    optionhtml += '<option value="' + data[i]['name'] + '"' +
                        (data[i]['indexName'] == $('#File').val() ? 'selected' : '') +
                        '>' + data[i]['indexName'] +
                        '</option>';
                });
                $("#ModisDataSet").empty();
                $('#ModisDataSet').append(optionhtml);
                ChangeModis();
            },
            error: function () {
            }
        });
    };

    function ChangeYear() {
        $.ajax({
            url: '@Url.Action("GetYearDates")',
            data: { Year: $('#Year').val() },
            type: 'POST',
            success: function (data) {
                var optionhtml = '';
                $.each(data.dates, function (i) {
                    optionhtml += '<option value="' + data.dates[i]['value'] + '"' +
                        (data.dates[i]['selected'] == true ? 'selected' : '') +
                        '>' + data.dates[i]['text'] +
                        '</option>';
                });
                $("#Date").empty();
                $('#Date').append(optionhtml);
                Change();
            },
            error: function () {
            }
        });
    };

    function ChangeModisDataSet() {
        ChangeModis();
    };

    function ChangeDate() {
        Change();
    };

    function ChangeModis() {
        //var d = new Date($('#Date').val());

        //var start = new Date(d.getFullYear(), 0, 0);
        //var diff = d - start;
        //var oneDay = 1000 * 60 * 60 * 24;
        //var day = Math.floor(diff / oneDay).toString();

        //var year = d.getFullYear();

        var year = $('#Year').val();
        var day = $('#Date').val();

        if (day.length < 3) day = '0' + day;
        if (day.length < 3) day = '0' + day;

        var layer_Modis = $('#ModisSource').val();
        layer_Modis += '_' + $('#ModisProduct').val();
        layer_Modis += '_A' + [year, day].join('');
        layer_Modis += '_' + $("#ModisDataSet").val();

        var Source_New = new ol.source.TileWMS({
            url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
            params: {
                'LAYERS': 'GeoServer:' + layer_Modis,
                'VERSION': '1.1.0',
                'FORMAT': 'image/png',
                'TILED': true
            },
            serverType: 'geoserver'
        });
        var l = map.getLayers().getArray()[1];
        l.setSource(Source_New);
    }

    function ChangeKATOType() {
        var Source_New = new ol.source.TileWMS({
            url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/GeoServer/wms?',
            params: {
                'LAYERS': 'GeoServer:' + $("#KATOType").val(),
                'VERSION': '1.1.0',
                'FORMAT': 'image/png',
                'TILED': true
            },
            serverType: 'geoserver'
        });
        var l = map.getLayers().getArray()[2];
        l.setSource(Source_New);
    }

    $(document).ready(function () {
        ChangeYear();
    });
</script>

<script src="~/lib/chart.js/Chart.js"></script>

<script>
    //Source_select_pasturepol.clear();

    var myLineChart = null;
    map.on('singleclick', function (evt) {

        document.getElementById("info1").disabled = false;
        $('#info1').addClass('btn btn-default');
        document.getElementById("info2").disabled = false;
        $('#info2').addClass('btn btn-default');
        Source_select_pasturepol.clear();
        var viewResolution = (map.getView().getResolution());
        var url = layers[2].getSource().getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {
                'INFO_FORMAT': 'text/javascript'
                //'FEATURE_COUNT': '10000'
            });
        if ($('.KATO:checked').val() === 'KATO') {
            if (url) {
                var parser = new ol.format.GeoJSON();
                $.ajax({
                    jsonp: false,
                    jsonpCallback: 'getJson',
                    type: 'GET',
                    url: url + "&format_options=callback:getJson",
                    async: false,
                    dataType: 'jsonp',
                    //jsonpCallback: 'parseResponse',
                    error: function (xhr, status, error) {

                    }
                }).then(function (response) {
                    var result = parser.readFeatures(response);
                    if (result.length > 0) {
                        // chart
                        //if ($("#KATOType").val() !== 'pastALA') {
                        var KATOLayer = 'adm2pol';

                        if ($('.KATOLevel:checked').val() === 'adm1pol') {
                            KATOLayer = 'adm1pol';

                            var polyFeature = new ol.Feature({
                                geometry: new ol.geom.MultiPolygon(response.features[0].geometry.coordinates)
                            });
                            Source_select_pasturepol.addFeature(polyFeature);
                        }
                        if ($('.KATOLevel:checked').val() === 'adm2pol') {
                            KATOLayer = 'adm2pol';

                            var polyFeature = new ol.Feature({
                                geometry: new ol.geom.MultiPolygon(response.features[0].geometry.coordinates)
                            });
                            Source_select_pasturepol.addFeature(polyFeature);
                        }
                        if ($('.KATOLevel:checked').val() === 'adm3pol') {
                            KATOLayer = 'adm3pol';

                            var polyFeature = new ol.Feature({
                                geometry: new ol.geom.MultiPolygon(response.features[0].geometry.coordinates)
                            });
                            Source_select_pasturepol.addFeature(polyFeature);
                        }
                        if ($('.KATOLevel:checked').val() === 'Pastures') {
                            KATOLayer = 'pastALA';

                            // работа с пастбищем в виде вектора (выделение пастбища)
                            var polyFeature = new ol.Feature({
                                geometry: new ol.geom.MultiPolygon(response.features[0].geometry.coordinates)
                            });
                            Source_select_pasturepol.addFeature(polyFeature);
                        }
                        @*if ($('.KATO:checked').val() === 'KATO') {

                            var url = '@Url.Action("ViewModisChart")' +
                                '?KATOType=' + KATOLayer +
                                '&PastId=' + result[0].get('id') +
                                '&KATO=' + result[0].get('kato_te') +
                                "&Year=" + $('#Year').val() +
                                "&ModisSource=" + "MOLT" +
                                "&ModisProduct=" + "MOD13Q1" +
                                "&ModisDataSet=" + $("#Index").val();
                            window.open(url, "MsgWindow", "width=500,height=400");
                        }*@
                        document.cookie = KATOLayer + "." + result[0].get('id') + "." + result[0].get('kato_te');
                        // pastures info
                        //if ($("#KATOType").val() === 'pastALA') {
                        if ($('.KATO:checked').val() === 'KATO') {

                        }
                        else if (($('.Pastures:checked').val() === 'Pastures') && ($('.PasturesType:checked').val() === 'pastALAColor')) {
                            $.ajax({
                                url: '@Url.Action("GetPasInfo")',
                                data: {
                                    class_id: result[0].get('class_id'),
                                    otdely_id: result[0].get('otdely_id'),
                                    subtype_id: result[0].get('subtype_id'),
                                    group_id: result[0].get('group_id'),
                                    recom_id: result[0].get('recom_id')
                                },
                                type: 'POST',
                                success: function (data) {
                                    $('#pas_class_id').html(data.class_name);
                                    $('#pas_otdely_id').html(data.otdely_name);
                                    $('#pas_subtype_id').html(data.subtype_name);
                                    $('#pas_group_id').html(data.group_name);
                                    $('#pas_recom_id').html(data.recom_name);

                                    $('#pas_ur_v').html(result[0].get('ur_v'));
                                    $('#pas_ur_l').html(result[0].get('ur_l'));
                                    $('#pas_ur_o').html(result[0].get('ur_o'));
                                    $('#pas_ur_z').html(result[0].get('ur_z'));
                                    $('#pas_korm_v').html(result[0].get('korm_v'));
                                    $('#pas_korm_l').html(result[0].get('korm_l'));
                                    $('#pas_korm_o').html(result[0].get('korm_o'));
                                    $('#pas_korm_z').html(result[0].get('korm_z'));

                                    $("#dialog").dialog({
                                        width: 700,
                                        height: 500
                                    });
                                },
                                error: function () {
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            document.getElementById("info1").disabled = true;
            $('#info1').removeClass('btn btn-default');
            document.getElementById("info2").disabled = true;
            $('#info2').removeClass('btn btn-default');
        }
    });


</script>

<script>
    function PasLagend() {
        $("#paslegenddialog").dialog({
            width: 690,
            height: 500
        });
    }
</script>

<script>
    function ViewChart1() {
        var params = document.cookie.split('.');
        params[2] = params[2].substr(0, params[2].indexOf(";"));
        var url = '@Url.Action("ViewModisChart1")' +
            '?KATOType=' + params[0] +
            '&PastId=' + params[1] +
            '&KATO=' + params[2] +
            "&Year=" + $('#Year').val() +
            "&ModisSource=" + "MOLT" +
            "&ModisProduct=" + "MOD13Q1" +
            "&ModisDataSet=" + $("#Index").val();
        window.open(url, "MsgWindow", "width=600,height=400");
    }

    function ViewChart2() {
        var params = document.cookie.split('.');
        params[2] = params[2].substr(0, params[2].indexOf(";"));
        var url = '@Url.Action("ViewModisChart2")' +
            '?KATOType=' + params[0] +
            '&PastId=' + params[1] +
            '&KATO=' + params[2] +
            "&ModisSource=" + "MOLT" +
            "&ModisProduct=" + "MOD13Q1" +
            "&ModisDataSet=" + $("#Index").val();
        window.open(url, "MsgWindow", "width=600,height=400");
    }
</script>

<script>
    function Opacity(l) {
        var o = '#opacity' + l.toString();
        layers[l].setOpacity($(o).val() / 100);
        if (l == 4) {
            layers[5].setOpacity($(o).val() / 100);
            layers[6].setOpacity($(o).val() / 100);
            layers[7].setOpacity($(o).val() / 100);
            layers[8].setOpacity($(o).val() / 100);
            layers[9].setOpacity($(o).val() / 100);
            layers[10].setOpacity($(o).val() / 100);
        }
    }
    $('#click').click(function () {
        //$("#sidepanel").animate({ width: 'toggle' }, 500);
        //var f = $('#map').width() / $('#map').parent().width() * 100;
        //if (f > 79 && f < 81) {
        //    $('#map').animate({ width: '100%' }, 500);
        //    $('#click').text('<<');
        //}
        //else {
        //    $('#map').animate({ width: '80%' }, 500);
        //    $('#click').text('>>');
        //}
        $("#sidepanel").toggle();
        var f = $('#map').width() / $('#map').parent().width() * 100;
        if (f > 79 && f < 81) {
            $('#map').width('100%');
            $('#click').text('<<');
        }
        else {
            $('#map').width('80%');
            $('#click').text('>>');
        }

        map.updateSize();
    });
</script>