
@{
    ViewData["Title"] = "График";
    Layout = null;
}

<style>

    .chart {
        width: 80%;
        height: 100%;
        float: left;
    }

    .sidepanel {
        background: rgba(247, 247, 247, 1);
        width: 20%;
        height: 100%;
        float: left;
    }

    .sidepanel-title {
        width: 100%;
        font-size: 3em;
        color: #ffffff;
        display: block;
        text-align: center;
    }

    #loading {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 200;
        width: 100vw;
        height: 100vh;
        /*background-color: rgba(192, 192, 192, 0.5);*/
        /*background-image: url("/Images/sun_preloader.gif");*/
        /*background-repeat: no-repeat;*/
        background-position: center;
    }
</style>

@Html.Partial("_loadingPartial")

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>График</title>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<body style="padding: 0px;">
    <script src="~/lib/chart.js/Chart.js"></script>
    @if (ViewBag.KATOType == "adm1pol")
    {
        <h2 align="center">
            Область (@(ViewBag.KATOName))
        </h2>
    }
    @if (ViewBag.KATOType == "adm2pol")
    {
        <h2 align="center">
            Район (@(ViewBag.KATOName))
        </h2>
    }
    @if (ViewBag.KATOType == "adm3pol")
    {
        <h2 align="center">
            Сельский округ (@(ViewBag.KATOName))
        </h2>
    }
    @if (ViewBag.KATOType == "pastALA")
    {
        <h2 align="center">
            Пастбищный выдел (@ViewBag.ClassId))
        </h2>
    }

    <div id="chartdiv" style="height: 200px;">
        <div class="chart">
            <canvas id="myChart" width="400" height="200"></canvas>
        </div>
        <div class="sidepanel" style="padding:15px;">
            <label class="control-label">Начальный месяц</label><br />
            <select asp-items="ViewBag.Month" name="Month" class="form-control" id="Month"></select>
            <label class="control-label">Количество месяцев</label><br />
            <select asp-items="ViewBag.NumberOfMonth" name="NumberOfMonth" class="form-control" id="NumberOfMonth"></select>
            <label class="control-label">Год</label><br />
            @*<select asp-items="ViewBag.Year" name="Year" class="form-control" id="Year" multiple="multiple"></select>*@
            @Html.ListBox("Year", (IEnumerable<SelectListItem>)ViewBag.Year, htmlAttributes: new { @class = "form-control", SelectionMode = "Multiple", @id = "Year", AutoPostBack = "true" })<br />
            <input type="button" id="update" class="btn btn-default" value="Обновить" onclick="Update()" /><br />
            <input type="button" id="update" class="btn btn-default" value="Сохранить в Excel" onclick="SaveToExcel()" />
        </div>
    </div>

    <script src="~/lib/bootstrap-multiselect/dist/js/bootstrap-multiselect.js"></script>
    <link href="~/lib/bootstrap-multiselect/dist/css/bootstrap-multiselect.css" rel="stylesheet" />

    @*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
              rel="stylesheet" type="text/css" />
        <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
        <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
        <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>*@

    <script type="text/javascript">
        //$(function () {
        //    $('[id*=Year]').multiselect({
        //        includeSelectAllOption: true
        //    });
        //});
    </script>

    <script>
        var myLineChart = null;
        var datacurrent = [],
            datamin = [],
            datamax = [],
            dataaverage = [],
            yearForExcel = [],
            valueForExcel = [];
        var Month = $('#Month').val();
        var NumberOfMonth = $('#NumberOfMonth').val();

        if ("@ViewBag.KATOType" != 'pastALA') {
            $.ajax({
                url: '@Url.Action("GetKATOZonalStat")',
                data: {
                    KATO: "@ViewBag.KATO",
                    Year: @ViewBag.SelectYear,
                    ModisSource: "@ViewBag.ModisSource",
                    ModisProduct: "@ViewBag.ModisProduct",
                    ModisDataSet: "@ViewBag.ModisDataSet",
                    Month: Month,
                    NumberOfMonth: NumberOfMonth
                },
                type: 'POST',
                success: function (data) {
                    var optionhtml = '';
                    $.each(data.current, function (i) {
                        yearForExcel.push(data.years[i]);
                    });
                    $.each(data.current, function (i) {
                        datacurrent.push(data.current[i] / 10000);
                        valueForExcel.push(data.current[i] / 10000);
                    });
                    $.each(data.min, function (i) {
                        datamin.push(data.min[i] / 10000);
                    });
                    $.each(data.max, function (i) {
                        datamax.push(data.max[i] / 10000);
                    });
                    $.each(data.average, function (i) {
                        dataaverage.push(data.average[i] / 10000);
                    });
                    var ctx = document.getElementById("myChart").getContext('2d');
                    if (myLineChart != null) {
                        myLineChart.destroy();
                    }
                    $('#chartdiv').height(200);
                    myLineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [1, 17, 33, 49, 65, 81, 97, 113, 129, 145, 161, 177, 193, 209, 225, 241, 257, 273, 289, 305, 321, 337, 353],
                            datasets: [{
                                label: @ViewBag.SelectYear,
                                data: datacurrent, //[12, 19, 3, 5, 2, 3],
                                backgroundColor: 'rgba(255,99,132,1)',
                                borderColor: 'rgba(255,99,132,1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: 'Минимум',
                                data: datamin,
                                backgroundColor: 'rgba(255, 159, 64, 1)',
                                borderColor: 'rgba(255, 159, 64, 1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: 'Максимум',
                                data: datamax,
                                backgroundColor: 'rgba(0, 240, 64, 1)',
                                borderColor: 'rgba(0, 240, 64, 1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: 'Среднее',
                                data: dataaverage,
                                backgroundColor: 'rgba(57, 26, 190, 1)',
                                borderColor: 'rgba(57, 26, 190, 1)',
                                borderWidth: 1,
                                fill: false
                            }
                            ]
                        }
                    });
                },
                error: function () {
                }
            });
        }
        else {
            $.ajax({
                url: '@Url.Action("GetPastZonalStat")',
                data: {
                    PastId: "@ViewBag.PastId",
                    Year: @ViewBag.SelectYear,
                    ModisSource: "@ViewBag.ModisSource",
                    ModisProduct: "@ViewBag.ModisProduct",
                    ModisDataSet: "@ViewBag.ModisDataSet",
                    Month: Month,
                    NumberOfMonth: NumberOfMonth
                },
                type: 'POST',
                success: function (data) {
                    var optionhtml = '';
                    $.each(data.current, function (i) {
                        yearForExcel.push(data.years[i]);
                    });
                    $.each(data.current, function (i) {
                        datacurrent.push(data.current[i] / 10000);
                        valueForExcel.push(data.current[i] / 10000);
                    });
                    $.each(data.min, function (i) {
                        datamin.push(data.min[i] / 10000);
                    });
                    $.each(data.max, function (i) {
                        datamax.push(data.max[i] / 10000);
                    });
                    $.each(data.average, function (i) {
                        dataaverage.push(data.average[i] / 10000);
                    });
                    var ctx = document.getElementById("myChart").getContext('2d');
                    if (myLineChart != null) {
                        myLineChart.destroy();
                    }
                    $('#chartdiv').height(200);
                    myLineChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [1, 17, 33, 49, 65, 81, 97, 113, 129, 145, 161, 177, 193, 209, 225, 241, 257, 273, 289, 305, 321, 337, 353],
                            datasets: [
                            {
                                label: 'Минимум',
                                data: datamin,
                                backgroundColor: 'rgba(255, 159, 64, 1)',
                                borderColor: 'rgba(255, 159, 64, 1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: 'Максимум',
                                data: datamax,
                                backgroundColor: 'rgba(0, 240, 64, 1)',
                                borderColor: 'rgba(0, 240, 64, 1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: 'Среднее',
                                data: dataaverage,
                                backgroundColor: 'rgba(57, 26, 190, 1)',
                                borderColor: 'rgba(57, 26, 190, 1)',
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                label: @ViewBag.SelectYear,
                                data: datacurrent, //[12, 19, 3, 5, 2, 3],
                                backgroundColor: 'rgba(255,99,132,1)',
                                borderColor: 'rgba(255,99,132,1)',
                                borderWidth: 1,
                                fill: false
                            }
                            ]
                        }
                    });
                },
                error: function () {
                }
            });
        }

        function Update() {
            var years = [];
            datamin = [];
            datamax = [];
            dataaverage = [];
            var Years = $('#Year').val();
            var Month = $('#Month').val();
            var NumberOfMonth = $('#NumberOfMonth').val();
            if ("@ViewBag.KATOType" != 'pastALA') {
                $.ajax({
                    url: '@Url.Action("GetKATOZonalStat")',
                    data: {
                        KATO: "@ViewBag.KATO",
                        Year: Years,
                        ModisSource: "@ViewBag.ModisSource",
                        ModisProduct: "@ViewBag.ModisProduct",
                        ModisDataSet: "@ViewBag.ModisDataSet",
                        Month: Month,
                        NumberOfMonth: NumberOfMonth
                    },
                    type: 'POST',
                    success: function (data) {
                        var optionhtml = '';
                        var oneYear;
                        var counter = 0;
                        $.each(data.min, function (i) {
                            datamin.push(data.min[i] / 10000);
                        });
                        $.each(data.max, function (i) {
                            datamax.push(data.max[i] / 10000);
                        });
                        $.each(data.average, function (i) {
                            dataaverage.push(data.average[i] / 10000);
                        });
                        var ctx = document.getElementById("myChart").getContext('2d');
                        if (myLineChart != null) {
                            myLineChart.destroy();
                        }
                        $('#chartdiv').height(200);

                        var dataChart = {
                            //labels: [1, 17, 33, 49, 65, 81, 97, 113, 129, 145, 161, 177, 193, 209, 225, 241, 257, 273, 289, 305, 321, 337, 353],
                            labels: data.labels,
                            datasets: [
                                {
                                    label: 'Минимум',
                                    data: datamin,
                                    backgroundColor: 'rgba(255, 159, 64, 1)',
                                    borderColor: 'rgba(255, 159, 64, 1)',
                                    borderWidth: 1,
                                    fill: false
                                },
                                {
                                    label: 'Максимум',
                                    data: datamax,
                                    backgroundColor: 'rgba(0, 240, 64, 1)',
                                    borderColor: 'rgba(0, 240, 64, 1)',
                                    borderWidth: 1,
                                    fill: false
                                },
                                {
                                    label: 'Среднее',
                                    data: dataaverage,
                                    backgroundColor: 'rgba(57, 26, 190, 1)',
                                    borderColor: 'rgba(57, 26, 190, 1)',
                                    borderWidth: 1,
                                    fill: false
                                }
                            ]
                        }
                        Years = [];
                        var sortAllYears = data.years;
                        sortAllYears.sort();
                        var check;
                        for (var i = 0; i < data.years.length; i++) {
                            oneYear = data.years[i];
                            if (check != oneYear) {
                                Years.push(oneYear);
                            }
                            check = data.years[i];
                        }
                        yearForExcel = [];
                        valueForExcel = [];
                        //datacurrent = [];
                        for (var i = 0; i < Years.length; i++) {
                            datacurrent = [];
                            var year = Years[i];
                            for (var j = 0; j < data.years.length; j++) {
                                var selectYear = data.years[j];
                                if (selectYear == year) {
                                    yearForExcel.push(selectYear);
                                    valueForExcel.push(data.current[j] / 10000);
                                    datacurrent.push(data.current[j] / 10000);
                                }
                            }
                            var letters = '0123456789ABCDEF';
                            var color = '#';
                            for (var k = 0; k < 6; k++) {
                                color += letters[Math.floor(Math.random() * 16)];
                            }
                            var newDataset = {
                                label: year,
                                data: datacurrent, //[12, 19, 3, 5, 2, 3],
                                backgroundColor: color,
                                borderColor: color,
                                borderWidth: 1,
                                fill: false
                            };
                            dataChart.datasets.push(newDataset);
                        }

                        $('#chartdiv').height(200);
                        myLineChart = new Chart(ctx, {
                            type: 'line',
                            data: dataChart,
                        });
                        myLineChart.update();
                    },
                    error: function () {
                    }
                });
            }
            else {
                $.ajax({
                    url: '@Url.Action("GetPastZonalStat")',
                    data: {
                        PastId: "@ViewBag.PastId",
                        Year: Years,
                        ModisSource: "@ViewBag.ModisSource",
                        ModisProduct: "@ViewBag.ModisProduct",
                        ModisDataSet: "@ViewBag.ModisDataSet",
                        Month: Month,
                        NumberOfMonth: NumberOfMonth
                    },
                    type: 'POST',
                    success: function (data) {
                        var optionhtml = '';
                        var oneYear;
                        var counter = 0;
                        $.each(data.min, function (i) {
                            datamin.push(data.min[i] / 10000);
                        });
                        $.each(data.max, function (i) {
                            datamax.push(data.max[i] / 10000);
                        });
                        $.each(data.average, function (i) {
                            dataaverage.push(data.average[i] / 10000);
                        });
                        var ctx = document.getElementById("myChart").getContext('2d');
                        if (myLineChart != null) {
                            myLineChart.destroy();
                        }
                        $('#chartdiv').height(200);

                        var dataChart = {
                            //labels: [1, 17, 33, 49, 65, 81, 97, 113, 129, 145, 161, 177, 193, 209, 225, 241, 257, 273, 289, 305, 321, 337, 353],
                            labels: data.labels,
                            datasets: [
                                {
                                    label: 'Минимум',
                                    data: datamin,
                                    backgroundColor: 'rgba(255, 159, 64, 1)',
                                    borderColor: 'rgba(255, 159, 64, 1)',
                                    borderWidth: 1,
                                    fill: false
                                },
                                {
                                    label: 'Максимум',
                                    data: datamax,
                                    backgroundColor: 'rgba(0, 240, 64, 1)',
                                    borderColor: 'rgba(0, 240, 64, 1)',
                                    borderWidth: 1,
                                    fill: false
                                },
                                {
                                    label: 'Среднее',
                                    data: dataaverage,
                                    backgroundColor: 'rgba(57, 26, 190, 1)',
                                    borderColor: 'rgba(57, 26, 190, 1)',
                                    borderWidth: 1,
                                    fill: false
                                }
                            ]
                        }
                        Years = [];
                        var sortAllYears = data.years;
                        sortAllYears.sort();
                        var check;
                        for (var i = 0; i < data.years.length; i++) {
                            oneYear = data.years[i];
                            if (check != oneYear) {
                                Years.push(oneYear);
                            }
                            check = data.years[i];
                        }
                        yearForExcel = [];
                        valueForExcel = [];
                        //datacurrent = [];
                        for (var i = 0; i < Years.length; i++) {
                            datacurrent = [];
                            var year = Years[i];
                            for (var j = 0; j < data.years.length; j++) {
                                var selectYear = data.years[j];
                                if (selectYear == year) {
                                    yearForExcel.push(selectYear);
                                    valueForExcel.push(data.current[j] / 10000);
                                    datacurrent.push(data.current[j] / 10000);
                                }
                            }
                            var letters = '0123456789ABCDEF';
                            var color = '#';
                            for (var k = 0; k < 6; k++) {
                                color += letters[Math.floor(Math.random() * 16)];
                            }
                        var newDataset = {
                            label: year,
                            data: datacurrent, //[12, 19, 3, 5, 2, 3],
                            backgroundColor: color,
                            borderColor: color,
                            borderWidth: 1,
                            fill: false
                        };
                            dataChart.datasets.push(newDataset);
                    }

                    $('#chartdiv').height(200);
                    myLineChart = new Chart(ctx, {
                        type: 'line',
                        data: dataChart,
                        });
                        myLineChart.update();
                    },
                    error: function () {
                    }
                });
            }
        }

        function SaveToExcel() {
            var title = ["Минимум", "Максимум", "Среднее"];
            var oneYear,
                check;
            for (var i = 0; i < yearForExcel.length; i++) {
                oneYear = yearForExcel[i];
                if (check != oneYear) {
                    title.push(yearForExcel[i]);
                }
                check = yearForExcel[i];
            }
            if ("@ViewBag.KATOType" == "adm1pol")
            {
                var KATOName = "Область";
            }
            if ("@ViewBag.KATOType" == "adm2pol")
            {
                var KATOName = "Район";
            }
            if ("@ViewBag.KATOType" == "adm3pol")
            {
                var KATOName = "Сельский_округ";
            }
            if ("@ViewBag.KATOType" == "pastALA")
            {
                var KATOName = "Пастбищный_выдел";
            }
            document.getElementById("loading").style.display = "block";
            $.ajax({
                url: '@Url.Action("SaveToExcelChart1")',
                data: {
                    KATOName: KATOName,
                    KATO: @ViewBag.KATO,
                    Title: title,
                    Min: datamin,
                    Max: datamax,
                    Average: dataaverage,
                    Years: yearForExcel,
                    Values: valueForExcel
                },
                type: 'POST',
                success: function (data) {
                    if (data.Error == null) {
                        window.location = data.filepath;
                    }
                    else {
                        alert(data.Error);
                    }
                    document.getElementById("loading").style.display = "none";
                },
                error: function () {
                    document.getElementById("loading").style.display = "none";
                }
            });
        }
    </script>

    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>
</html>